{
  "blogPosts": [
    {
      "id": "IvorySQL-PGCon2022",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-PGCon2022",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-6-2-PGCon2022/index.md",
        "title": "PGCon2022会议回顾|IvorySQL项目的技术讲解",
        "description": "2022年渥太华时间5月26日瀚高北美研究院负责人Grant Zhou在会上发表IvorySQL项目的技术讲解。本次会议内容主要介绍了我们是谁、IvorySQL是什么、IvorySQL的关键功能点、社区贡献指南、开发者指南等。重点介绍了基于 PostgreSQL 14，IvorySQL在PostgreSQL基础之上添加了一些令人兴奋的功能点！！",
        "date": "2022-06-02T00:00:00.000Z",
        "formattedDate": "2022年6月2日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "PGCon2022",
            "permalink": "/zh-CN/blog/tags/pg-con-2022"
          },
          {
            "label": "Database",
            "permalink": "/zh-CN/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/zh-CN/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/zh-CN/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 1.795,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-PGCon2022",
          "title": "PGCon2022会议回顾|IvorySQL项目的技术讲解",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PGCon2022",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "nextItem": {
          "title": "Introduction to IvorySQL Packages",
          "permalink": "/zh-CN/blog/IvorySQL-Packages"
        }
      },
      "content": "2022年渥太华时间5月26日瀚高北美研究院负责人Grant Zhou在会上发表IvorySQL项目的技术讲解。本次会议内容主要介绍了我们是谁、IvorySQL是什么、IvorySQL的关键功能点、社区贡献指南、开发者指南等。**重点介绍了基于 PostgreSQL 14，IvorySQL在PostgreSQL基础之上添加了一些令人兴奋的功能点！！**\r\n\r\n\r\n\r\n\r\n\r\n**IvorySQL在PostgreSQL的基础上增加的主要功能特点包括**：\r\n\r\n- Oracle兼容包  \r\n\r\n- Oracle兼容PL/iSQL过程语言  \r\n\r\n- GUC在Oracle和PostgreSQL模式之间切换  \r\n\r\n- Oracle兼容各种DDL操作的语法  \r\n\r\n- Oracle兼容的日期/时间函数  \r\n\r\n- 内置Orafce (https://github.com/orafce/orafce)  \r\n\r\n \r\n\r\n更多功能特性描述，可参阅https://www.ivorysql.org/zh-CN/releases-page的发布说明。\r\n\r\n大家可以通过IvorySQL产品路线图（https://github.com/IvorySQL/IvorySQL/issues）定期查看GitHub中的问题选项卡可获得最新的功能列表。\r\n\r\n \r\n\r\n\r\n\r\n**bilibili 视频讲解链接**：\r\n\r\n[PGCon2022会议回顾|IvorySQL项目的技术讲解_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV17U4y1y7nZ?spm_id_from=333.999.list.card_archive.click)\r\n\r\n \r\n\r\n\r\n\r\n因为时差的原因，有许多小伙伴没有看到，小助理特意为大家整理好了会议视频内容以及**中文PPT材料**，有需要的小伙伴们，**关注公众号，添加小助理微信即可获得。**\r\n\r\n\r\n\r\n---\r\n\r\n>通过订阅邮件列表加入IvorySQL社区： \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>- 官方微信公众号：**IvorySQL开源数据库社区**\r\n>\r\n>***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    },
    {
      "id": "IvorySQL-Packages",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-Packages",
        "source": "@site/blog/2022-5-27-packages/index.md",
        "title": "Introduction to IvorySQL Packages",
        "description": "IvorySQL is an open source project. One of the core goals of this project is to deliver oracle",
        "date": "2022-05-27T00:00:00.000Z",
        "formattedDate": "2022年5月27日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "Oracle",
            "permalink": "/zh-CN/blog/tags/oracle"
          },
          {
            "label": "Packages",
            "permalink": "/zh-CN/blog/tags/packages"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/zh-CN/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 6.025,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "Asif Rehman",
            "url": "https://github.com/rasifr",
            "key": "Asif"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-Packages",
          "title": "Introduction to IvorySQL Packages",
          "authors": [
            "Asif"
          ],
          "tags": [
            "IvorySQL",
            "Oracle",
            "Packages",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "PGCon2022会议回顾|IvorySQL项目的技术讲解",
          "permalink": "/zh-CN/blog/IvorySQL-PGCon2022"
        },
        "nextItem": {
          "title": "IvorySQL--Linux环境源码编译安装",
          "permalink": "/zh-CN/blog/IvorySQL-Linux"
        }
      },
      "content": "IvorySQL is an open source project. One of the core goals of this project is to deliver oracle\r\ncompatibility, So that one can use the oracle code on IvorySQL database server.\r\n\r\nProviding Oracle compatibility on top of PostgreSQL is a multi-dimensional task. Ranging from providing the Oracle compatible SQL syntax to adding support for data types that are either missing or behaves differently in PostgreSQL. One of the main core of Oracle compatibility is to provide the compatible PL (procedural language) in PostgreSQL that is functionally and syntactical compatible with Oracle's PL/SQL. For that purpose IvorySQL has added a new PL language PL/iSQL that that accepts, understands and executes the PL/SQL syntax.\r\nAnd as you know one of the core feature of Oracle's PL/SQL is the PACKAGES.\r\nPackage is a schema object in Oracle that contains definitions for a group of related functionalities and is one of the most widely used feature of Oracle.\r\n\r\nSo In this blog I will give a introduction of Packages followed by an example on how you can create, use, and destroy Oracle style packages with IvorySQL.\r\n\r\n\r\n## Packages\r\n\r\nSo what are packages? The Packages are grouping of PL/iSQL code, divided in logical program units. In other words\r\na package can be considered a collection of related functions, procedures, variables or cursors. This collection is\r\ncollectively be accessed via the common name.\r\n\r\nIvorySQL has PL/iSQL language that accepts, understands and executes the PL/SQL code. The packages use this same language. The packages have two main components.\r\n\r\n- Package Specification\r\nThe package specification lists all the items that can be accessed from outside the package. such as functions, procedures, variables and cursors. This is also know as public specification.\r\n\r\n- Package Body\r\nThe Package Body contains the implementation of all functions and procedures that are listed in the package specification. In addition these, it can also implement more function and procedure or other elements.\r\n\r\nThese elements that are not in the package specification, will be treated private members of the package and these can only be referenced from within the package. The outside access is not permitted.\r\n\r\nThe package body can also have a special code block called initializer block. This is a special because this block is\r\nexecuted only once per session, at the very beginning when the package is first accessed.\r\n\r\n\r\nLet's see some example of the code and see how a package operates.\r\n\r\n## Example\r\n\r\n### Generic Example\r\nFirst let's set the compatibility mode, so we can access oracle compatible features available in the ivorysql database.\r\n\r\n```SET compatible_mode TO oracle;```\r\n\r\n```\r\nCREATE TABLE books (\r\n    id     INT, \r\n    title  VARCHAR2(100), \r\n    author VARCHAR2(100),\r\n    price  NUMBER);\r\n```\r\n\r\n```\r\nINSERT INTO books VALUES (10, 'The Hobbit', 'J. R. R. Tolkien', 10.0);\r\nINSERT INTO books VALUES (11, 'Winnie-the-Pooh', 'A. A. Milne', 5.0);\r\nINSERT INTO books VALUES (12, 'Peter Pan', 'James Matthew Barrie', 4.0);\r\nINSERT INTO books VALUES (13, 'Charlie and the Chocolate Factory', 'Roald Dahl', 5.0);\r\nINSERT INTO books VALUES (14, 'SThe Jungle Book', 'Rudyard Kipling', 9.0);\r\nINSERT INTO books VALUES (15, 'The Little White Bird', 'James Matthew Barrie', 3.0);\r\n```\r\n\r\n\r\nLet's create a simple package. This package declares a cursor to list all available books. Have some subprograms to list, add and remove books. It also declares a some private variables to keep count and book information.\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE mybooks AS\r\n    CURSOR      booksinfo IS SELECT * from BOOKS;\r\n\r\n    PROCEDURE list_books;\r\n    FUNCTION add_book(title VARCHAR2(100), author VARCHAR2(100), \r\n         price NUMBER) RETURN bool;\r\n    PROCEDURE remove_book(book_title VARCHAR2(100));\r\nEND;\r\nivorysql$# /\r\nCREATE PACKAGE\r\n```\r\n```\r\nCREATE OR REPLACE PACKAGE BODY mybooks AS\r\n\r\n    -- declare private variables\r\n    bookinfo    booksinfo%rowtype; \r\n    books_count INT;\r\n\r\n    PROCEDURE list_books AS\r\n    BEGIN\r\n        OPEN booksinfo;\r\n        RAISE INFO 'Book Info:';\r\n        RAISE INFO '';\r\n        LOOP\r\n\t\t\tFETCH booksinfo into bookinfo;\r\n\t\t\tEXIT WHEN NOT FOUND;\r\n\r\n\t\t\tRAISE INFO '  Name    = %', bookinfo.title;\r\n            RAISE INFO '  Author  = %', bookinfo.author;\r\n            RAISE INFO '  Price   = %', bookinfo.price;\r\n            RAISE INFO '------------------------------';\r\n\t\tEND LOOP;\r\n        RAISE INFO 'Total Books   = %', books_count;\r\n\t\tCLOSE booksinfo;\r\n    END;\r\n\r\n    FUNCTION add_book(title VARCHAR2(100), author VARCHAR2(100),\r\n        price NUMBER) RETURN bool AS\r\n    BEGIN\r\n        INSERT INTO BOOKS VALUES (\r\n            books_count + 1,\r\n            title,\r\n            author,\r\n            price);\r\n        \r\n        books_count := books_count + 1;\r\n        RETURN true;\r\n\r\n        EXCEPTION WHEN OTHERS THEN\r\n            RETURN false;\r\n    END;\r\n\r\n    PROCEDURE remove_book(book_title VARCHAR2(100)) AS\r\n    BEGIN\r\n        DELETE FROM BOOKS WHERE title = book_title;\r\n\r\n        EXCEPTION WHEN OTHERS THEN\r\n            RAISE INFO 'Book % not found', book_title;\r\n    END;\r\n\r\n-- initializer block\r\nBEGIN           \r\n    books_count := 0;\r\n    SELECT count(*) INTO books_count\r\n        FROM BOOKS;\r\nEND;\r\nivorysql$# /\r\nCREATE PACKAGE BODY\r\n```\r\n\r\nLet checkout the count. This anonymous block tries to access the private members of the package, which should result in error.\r\n```\r\nivorysql=# DECLARE\r\nivorysql$#   nbooks int := 0;\r\nivorysql$# BEGIN\r\nivorysql$#     nbooks := mybooks.books_count;\r\nivorysql$#     RAISE INFO 'Total Books   = %', nbooks;\r\nivorysql$# END;\r\nivorysql$# /\r\n2022-05-26 16:35:32.328 PKT [63554] ERROR:  package private variable (\"mybooks.books_count\") is not accessible\r\n```\r\n\r\nLet's list all available books using the subprogram ```list_books``` of the package ```mybooks```.\r\n```\r\nivorysql=# BEGIN\r\nivorysql$#     mybooks.list_books;\r\nivorysql$# END;\r\nivorysql$# /\r\nINFO:  Book Info:\r\nINFO:  \r\nINFO:    Name    = The Hobbit\r\nINFO:    Author  = J. R. R. Tolkien\r\nINFO:    Price   = 10\r\nINFO:  ------------------------------\r\nINFO:    Name    = Winnie-the-Pooh\r\nINFO:    Author  = A. A. Milne\r\nINFO:    Price   = 3\r\n....\r\n....\r\nINFO:  Total Books   = 6\r\nDO\r\nivorysql=#\r\n```\r\n\r\nLet's add a new book using the subprogram ```add_book``` of the package ```mybooks```.\r\n```\r\nDECLARE\r\n  added bool;\r\nBEGIN\r\n    added := mybooks.add_book('The Cat in the Hat', 'Dr. Seuss', 10);\r\n    IF added = TRUE THEN\r\n        RAISE INFO 'new book added';\r\n    END IF;\r\nEND;\r\n/\r\n```\r\n\r\n### Dropping a Package\r\n\r\nOne can either drop the package body or complete package using:\r\n- DROP PACKAGE BODY [package name]\r\n\r\n```\r\nivorysql=# DROP PACKAGE BODY mybooks;\r\nDROP PACKAGE BODY\r\n```\r\n- DROP PACKAGE [package name\r\n```\r\nivorysql=# DROP PACKAGE mybooks;\r\nDROP PACKAGE\r\n```\r\n\r\n### Package Invocation with different rights\r\nWe are going to create two packages with invoker and definer rights and watch the results to see how they differentiate.\r\n\r\n```\r\nivorysql=> SELECT current_user;\r\n current_user \r\n--------------\r\n ivorysql\r\n(1 row)\r\n```\r\n\r\n-- Create a Package with INVOKER rights\r\n```\r\nCREATE OR REPLACE PACKAGE pkg_invrights AUTHID CURRENT_USER AS\r\n    PROCEDURE curr_user;\r\nEND;\r\n/\r\n\r\nCREATE OR REPLACE PACKAGE BODY pkg_invrights AS\r\n    PROCEDURE curr_user AS\r\n    BEGIN\r\n        RAISE INFO 'Current User: %', current_user;\r\n    END;\r\nEND;\r\n/\r\n```\r\n\r\n-- Create a Package with DEFINER rights\r\n```\r\nCREATE OR REPLACE PACKAGE pkg_defrights AUTHID DEFINER AS\r\n    PROCEDURE curr_user;\r\nEND;\r\n/\r\n\r\nCREATE OR REPLACE PACKAGE BODY pkg_defrights AS\r\n    PROCEDURE curr_user AS\r\n    BEGIN\r\n        RAISE INFO 'Current User: %', current_user;\r\n    END;\r\nEND;\r\n/\r\n```\r\n\r\nLet's see the package with invoker rights first.\r\n```\r\nivorysql=> CALL pkg_invrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\nLet's see the package with definer rights.\r\n```\r\nivorysql=> CALL pkg_defrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\nLet's switch to another user named ```ivuser```\r\n```\r\nivorysql=> \\c ivorysql ivuser;\r\nYou are now connected to database \"ivorysql\" as user \"ivuser\".\r\n```\r\nLet's see the package with invoker rights first.\r\n```\r\nivorysql=> CALL pkg_invrights.curr_user;\r\nINFO:  Current User: ivuser\r\nCALL\r\n```\r\nLet's see the package with definer rights.\r\n```\r\nivorysql=> CALL pkg_defrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\n\r\nAs shown above when the package with invoker rights (```pkg_invrights```) is called, it's using the privileges of the user that invoked the package. However, when a definer package (```pkg_defrights```) is called, it still uses the privileges of the package owner."
    },
    {
      "id": "IvorySQL-Linux",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-Linux",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-5-17-linux/index.md",
        "title": "IvorySQL--Linux环境源码编译安装",
        "description": "IvorySQL可以在Linux, OSX, Unix和Windows平台上构建，与PostgreSQL的编译安装基本上是一样的。本文对基于Linux的系统上编译源代码的步骤进行说明。",
        "date": "2022-05-17T00:00:00.000Z",
        "formattedDate": "2022年5月17日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "Linux，PostgreSQL",
            "permalink": "/zh-CN/blog/tags/linux，-postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 8.21,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-Linux",
          "title": "IvorySQL--Linux环境源码编译安装",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "Linux，PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "Introduction to IvorySQL Packages",
          "permalink": "/zh-CN/blog/IvorySQL-Packages"
        },
        "nextItem": {
          "title": "IvorySQL--YUM源安装",
          "permalink": "/zh-CN/blog/IvorySQL-YUM"
        }
      },
      "content": "IvorySQL可以在Linux, OSX, Unix和Windows平台上构建，与PostgreSQL的编译安装基本上是一样的。本文对基于Linux的系统上编译源代码的步骤进行说明。\r\n\r\n\r\n\r\n\r\n\r\n## 一、准备工作\r\n\r\n\r\n\r\n### 1.1 获取 IvorySQL 源码\r\n\r\nWindows或Linux，只要安装了git，都可以使用git下载：\r\n\r\ngit clone https://github.com/IvorySQL/IvorySQL.git\r\n\r\ngit clone https://gitee.com/IvorySQL/IvorySQL.git\r\n\r\n \r\n\r\n或者直接去github或gitee下载都可以：\r\n\r\nhttps://github.com/IvorySQL/IvorySQL\r\n\r\nhttps://gitee.com/IvorySQL/IvorySQL\r\n\r\ngithub会有点慢，能用则用，不行就改用gitee。\r\n\r\n \r\n\r\n截至本稿，IvorySQL的最新发布版本是1.2，于2022年2月28日发布。\r\n\r\n![L](L-aa.png)\r\n\r\n本文使用的源码版本也是IvorySQL 1.2。\r\n\r\n\r\n\r\n### 1.2 安装依赖包\r\n\r\n要从源代码编译IvorySQL，必须确保系统上有可用的先决条件包。\r\n执行以下命令安装相关包：\r\n\r\n```\r\nsudo yum install -y bison-devel readline-devel zlib-devel openssl-devel wget\r\nsudo yum groupinstall -y 'Development Tools'\r\n```\r\n\r\n**说明：“Development Tools”包含了gcc，make，flex，bison。**\r\n\r\n\r\n\r\n\r\n\r\n## 二、编译安装\r\n\r\n前面通过获取的源码在文件夹IvorySQL里，接下来我们就进入这个文件夹进行操作。\r\n\r\n\r\n\r\n### 2.1 配置\r\n\r\nRoot用户执行以下命令进行配置：\r\n\r\n```\r\n./configure\r\n```\r\n\r\n**说明：由于没有提供--prefix，默认安装在/usr/local/pgsql。**\r\n\r\n\r\n\r\n指定安装路径，如“/usr/local/ivorysql/ivorysql-1.2”：\r\n\r\n```\r\n./configure --prefix=/usr/local/ivorysql/ivorysql-1.2\r\n```\r\n\r\n**注意：我们要记住指定的目录，因为系统查不出已经编译安装的程序在哪。**\r\n\r\n\r\n\r\n更多configure参数通过“./configure --help”查看。还可以查看PostgreSQL手册。\r\n\r\n\r\n\r\n### 2.2 编译安装\r\n\r\n配置完成后，执行make进行编译：\r\n\r\n```\r\nmake\r\n```\r\n\r\n\r\n\r\n要在安装新编译的服务之前使用回归测试测试一下，以下命令均可：\r\n\r\n```\r\nmake check\r\nmake check-world\r\n```\r\n\r\n\r\n\r\n然后安装：\r\n\r\n```\r\nmake install\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## 三、初始化数据库服务\r\n\r\n我们这里只是简单配置一下，能本地和远程连接就可以了。\r\n\r\n\r\n\r\n### 3.1 创建操作系统用户\r\n\r\n用户root会话下，新建用户 ivorysql：\r\n\r\n```\r\n/usr/sbin/groupadd ivorysql\r\n/usr/sbin/useradd -g ivorysql ivorysql -c \"IvorySQL1.2 Server\"\r\npasswd ivorysql\r\n```\r\n\r\n\r\n\r\n### 3.2 创建数据目录\r\n\r\n接下来需要创建数据目录并修改权限。在root会话下执行以下命令。\r\n\r\n```\r\nmkdir -p /ivorysql/1.2/data\r\nchown -R ivorysql.ivorysql /ivorysql/1.2/\r\n```\r\n\r\n**注意：这里没按RPM安装将数据目录放置到“/var/lib/ivorysql/ivorysql-1/data”。**\r\n\r\n\r\n\r\n### 3.3 环境变量\r\n\r\n切换到用户ivorysql，修改文件“/home/ ivorysql /.bash_profile”，配置环境变量：\r\n\r\n```\r\numask 022\r\nexport LD_LIBRARY_PATH=/usr/local/pgsql/lib:$LD_LIBRARY_PATH\r\nexport PATH=/usr/local/pgsql/bin:$PATH\r\nexport PGDATA=/ivorysql/1.2/data\r\n```\r\n\r\n\r\n\r\n使环境变量在当前ivorysql用户会话中生效：\r\n\r\n```\r\nsource .bash_profile\r\n```\r\n\r\n也可以重新登录或开启一个新的用户ivorysql的会话。\r\n\r\n\r\n\r\n### 3.4 设置防火墙\r\n\r\n如果开启了防火墙，还需要将端口5333开放：\r\n\r\n```\r\nfirewall-cmd --zone=public --add-port=5333/tcp --permanent\r\nfirewall-cmd --reload\r\n```\r\n\r\n**说明：默认端口是5333，如果不开放该端口，外部客户端通过ip连接会失败。**\r\n\r\n\r\n\r\n### 3.5 初始化\r\n\r\n在用户ivorysql下，简单执行initdb就可以完成初始化：\r\n\r\n```\r\ninitdb\r\n```\r\n\r\n**说明：initdb操作与PostgreSQL一样，可以按照PG的习惯去初始化。**\r\n\r\n\r\n\r\n### 3.6 启动数据库\r\n\r\n使用pg_ctl启动数据库服务：\r\n\r\n```\r\npg_ctl start\r\n```\r\n\r\n\r\n\r\n查看状态，启动成功：\r\n\r\n```\r\npg_ctl status\r\n```\r\n\r\npg_ctl: server is running (PID: 29549)\r\n\r\n/usr/local/pgsql/bin/postgres\r\n\r\n\r\n\r\n\r\n\r\n## 四、配置服务\r\n\r\n这里只是简单配置一下，能本地和远程连接就可以了\r\n\r\n\r\n\r\n### 4.1 客户端验证\r\n\r\n修改 /ivorysql/1.2/data/pg_hba.conf，追加以下内容：\r\n\r\n```\r\nhost    all             all             0.0.0.0/0               trust\r\n```\r\n\r\n**注意：这里是trust，就是说可以免密登录。**\r\n\r\n\r\n\r\n执行以下命令加载配置：\r\n\r\n```\r\npg_ctl reload\r\n```\r\n\r\n\r\n\r\n### 4.2 基本参数\r\n\r\n通过psql连接数据库：\r\n\r\n```\r\npsql\r\n```\r\n\r\n\r\n\r\n修改监听地址：\r\n\r\n```\r\nalter system set listen_addresses = '*';\r\n```\r\n\r\n**说明：默认是监听在127.0.0.1，主机外是连不上服务的。**\r\n\r\n\r\n\r\n重启服务使设置生效：\r\n\r\n```\r\npg_ctl restart\r\n```\r\n\r\n\r\n\r\n### 4.3 守护服务\r\n\r\n创建service文件：\r\n\r\n```\r\ntouch /usr/lib/systemd/system/ivorysql.service\r\n```\r\n\r\n\r\n\r\n编辑内容如下：\r\n\r\n```\r\n[Unit]\r\nDescription=IvorySQL 1.2 database server\r\nDocumentation=https://www.ivorysql.org\r\nRequires=network.target local-fs.target\r\nAfter=network.target local-fs.target\r\n\r\n[Service]\r\nType=forking\r\n\r\nUser=ivorysql\r\nGroup=ivorysql\r\n\r\nEnvironment=PGDATA=/ivorysql/1.2/data/\r\n\r\nOOMScoreAdjust=-1000\r\n\r\nExecStart=/usr/local/pgsql/bin/pg_ctl start -D ${PGDATA}\r\nExecStop=/usr/local/pgsql/bin/pg_ctl stop -D ${PGDATA}\r\nExecReload=/usr/local/pgsql/bin/pg_ctl reload -D ${PGDATA}\r\n\r\nTimeoutSec=0\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\n**说明：service的写法有很多，在生产环境使用时需谨慎，请多次重复测试。**\r\n\r\n\r\n\r\n停止pg_ctl启动的数据库服务，启用systemd服务并启动：\r\n\r\n```\r\nsystemctl enable --now ivorysql.service\r\n```\r\n\r\n\r\n\r\nIvorSQL数据库服务操作命令：\r\n\r\n```\r\nsystemctl start ivorysql.service\t\t\t--启动数据库服务\r\nsystemctl stop ivorysql.service\t\t\t\t--停止数据库服务\r\nsystemctl restart ivorysql.service\t\t\t--重启数据库\r\nsystemctl status ivorysql.service\t\t\t--查看数据库状态\r\nsystemctl reload ivorysql.service\t\t\t--可以满足部分数据库配置修改完后生效\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## 五、客户端链接数据库\r\n\r\n连接IvorySQL数据库服务的客户端工具和PostgreSQL的一样。\r\n\r\n\r\n\r\n### 5.1 psql 连接\r\n\r\n操作系统用户ivorysql会话下连接：\r\n\r\n```\r\n[ivorysql@Node02 ~]$ psql\r\npsql (15devel)\r\nType \"help\" for help.\r\n\r\nivorysql=#\r\n```\r\n\r\n\r\n\r\n### 5.2 DBeaver 连接\r\n\r\nDBeaver是一个功能比较强大的开源工具，连接配置如下：\r\n\r\n![L](L-bb.png)\r\n\r\n\r\n\r\n### 5.3 瀚高 developer 连接\r\n\r\n瀚高developer是瀚高自主研发的一个工具，除了可以支持瀚高数据库，还支持PostgreSQL以及IvorySQL数据库。连接配置如下：\r\n\r\n![L](L-cc.png)\r\n\r\n如果想使用该工具，请关注公众号加入微信群“IvorySQL中国技术交流群”咨询。\r\n\r\n\r\n\r\n\r\n\r\n## 六、卸载\r\n\r\n编译安装就用编译卸载的方式卸载。\r\n\r\n\r\n\r\n### 6.1 备份数据\r\n\r\n数据目录在“/ivorysql/1.2/data”下，所以我们将该目录保护好就可以，最好停止数据库服务后做备份。\r\n\r\n\r\n\r\n### 6.2 编译卸载\r\n\r\nRoot会话下切到源码目录下，分别执行以下命令：\r\n\r\n```\r\nmake uninstall\r\nmake clean\r\n```\r\n\r\n\r\n\r\n删除残余目录和文件：\r\n\r\n```\r\nsystemctl disable ivorysql.servicemake\t\t\t\t\t--禁用服务\r\nmv /usr/lib/systemd/system/ivorysql.service /tmp/\t\t--服务文件移到/tmp，删除也可以\r\nrm -fr /usr/local/pgsql\t\t\t\t\t\t\t\t\t--删除残留安装目录\r\n```\r\n\r\n还有用户ivorysql以及对应的环境变量，可以根据情况是否清理。\r\n\r\n剩下的就是数据目录“/ivorysql/1.2/data”了，请务必做好备份再做处理。\r\n\r\n还有安装的依赖包，可根据情况决定是否卸载。\r\n\r\n\r\n\r\n\r\n\r\n## 七、后记\r\n\r\n- 更细化的操作，可参照PostgreSQL的相关内容。\r\n\r\n- 大家还可以参考IvorySQL源码下自带文档：/root/IvorySQL/README.md。\r\n\r\n- 也可以打开网站链接：https://gitee.com/IvorySQL/IvorySQL/blob/master/README.md。\r\n\r\n- 有任何问题，欢迎大家到IvorySQL官方社区仓库：github.com/IvorySQL/IvorySQL 提交issue。\r\n\r\n\r\n\r\n## 关于IvorySQL\r\n\r\nIvorySQL项目是一个具有广泛生态基础和中国特色的PG开源衍生项目，是瀚高公司设计研发的一款具备强大Oracle兼容能力的开源数据库。具备高兼容性和高可用性，并致力于遵守open-source ways。\r\n\r\n**社区仓库**：github.com/IvorySQL/IvorySQL\r\n\r\n**CSDN**: IvorySQL\r\n\r\n**开源中国**：IvorySQL  \r\n\r\n**墨天轮**：IvorySQL\r\n\r\n\r\n通过订阅邮件列表加入IvorySQL社区： \r\n- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n- **官方微信公众号：IvorySQL开源数据库社区**\r\n\r\n***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    },
    {
      "id": "IvorySQL-YUM",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-YUM",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-5-6-yum/index.md",
        "title": "IvorySQL--YUM源安装",
        "description": "通过 YUM 源安装软件",
        "date": "2022-05-06T00:00:00.000Z",
        "formattedDate": "2022年5月6日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "YUM， PostgreSQL",
            "permalink": "/zh-CN/blog/tags/yum，-postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 9.32,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-YUM",
          "title": "IvorySQL--YUM源安装",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "YUM， PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL--Linux环境源码编译安装",
          "permalink": "/zh-CN/blog/IvorySQL-Linux"
        },
        "nextItem": {
          "title": "IvorySQL亮相于PostgresConf SV 2022 硅谷Postgres大会",
          "permalink": "/zh-CN/blog/IvorySQL-sv"
        }
      },
      "content": "## 通过 YUM 源安装软件\r\n\r\n\r\n\r\n下面我们以操作系统Centos7.9环境为例，看看如何安装IvorySQL数据库。先介绍最简单的YUM源安装。\r\n\r\n\r\n\r\n### 1.1 安装 YUM 源\r\n\r\n\r\n\r\n下载地址：https://yum.highgo.ca/ivorysql.html\r\n\r\n点击图中按钮【DOWNLOAD REPO RPM】下载ivorysql-release-1.0-1.noarch.rpm并传到Centos7.9：\r\n\r\n![yum](yum-a.png)\r\n\r\n或者在Centos7上使用wget下载：\r\n\r\n```\r\nwget https://yum.highgo.ca/dists/ivorysql-rpms/repo/ivorysql-release-1.0-1.noarch.rpm\r\n```\r\n\r\n\r\n\r\n安装ivorysql-release-1.0-1.noarch.rpm：\r\n\r\n```\r\nrpm -ivh ivorysql-release-1.0-1.noarch.rpm\r\n```\r\n\r\n安装后，将创建YUM源配置文件：/etc/yum.repos.d/ivorysql.repo。\r\n\r\n\r\n\r\n搜索查看相关安装包：\r\n\r\n```\r\nyum search ivorysql\r\n```\r\n\r\n\r\n\r\n搜索结果说明见表1：\r\n\r\n​                                                                                                         表1 YUM源说明\r\n\r\n| **序号** | **包名**                                                     | **描述**                                   |\r\n| -------- | ------------------------------------------------------------ | ------------------------------------------ |\r\n| 1        | [ivorysql1.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-1.2-1.rhel7.x86_64.rpm) | IvorySQL 客户端程序和库文件                |\r\n| 2        | [ivorysql1-contrib.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-contrib-1.2-1.rhel7.x86_64.rpm) | 随IvorySQL发布的已贡献的源代码和二进制文件 |\r\n| 3        | ivorysql1-devel.x86_64                                       | IvorySQL开发头文件和库                     |\r\n| 4        | ivorysql1-docs.x86_64                                        | IvorySQL的额外文档                         |\r\n| 5        | [ivorysql1-libs.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-libs-1.2-1.rhel7.x86_64.rpm) | 所有IvorySQL客户端所需的共享库             |\r\n| 6        | ivorysql1-llvmjit.x86_64                                     | 对IvorySQL的即时编译支持                   |\r\n| 7        | ivorysql1-plperl.x86_64                                      | 用于IvorySQL的过程语言Perl                 |\r\n| 8        | ivorysql1-plpython3.x86_64                                   | 用于IvorySQL的过程语言Python3              |\r\n| 9        | ivorysql1-pltcl.x86_64                                       | 用于IvorySQL的过程语言Tcl                  |\r\n| 10       | [ivorysql1-server.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-server-1.2-1.rhel7.x86_64.rpm) | 创建和运行IvorySQL服务器所需的程序         |\r\n| 11       | ivorysql1-test.x86_64                                        | 随IvorySQL发布的测试套件                   |\r\n| 12       | ivorysql-release.noarch                                      | 瀚高基础软件股份有限公司的Yum源配置RPM包   |\r\n\r\n**说明：1、2、5、10是RPM包安装需要的，超链接可以单独下载。**\r\n\r\n\r\n\r\n### 1.2 安装 IVORYSQL\r\n\r\n\r\n\r\n要安装数据库服务，需要安装ivorysql1-server。\r\n在用户root会话下执行以下命令：\r\n\r\n```\r\nyum install -y ivorysql1-server\r\n```\r\n\r\n\r\n\r\n**安装清单：**\r\n\r\n ivorysql1-server.x86_64 0:1.2-1.rhel7                                                                                \r\n\r\n\r\n\r\n**依赖安装：**\r\n\r\n-   ivorysql1.x86_64 0:1.2-1.rhel7\t\t\tivorysql1-contrib.x86_64 0:1.2-1.rhel7\r\n\r\n-   ivorysql1-libs.x86_64 0:1.2-1.rhel7\t\tlibicu.x86_64 0:50.2-4.el7_7\r\n\r\n-   libtirpc.x86_64 0:0.2.4-0.16.el7\t\t\tlibxslt.x86_64 0:1.1.28-6.el7\r\n\r\n-   python3.x86_64 0:3.6.8-18.el7\t\t\tpython3-libs.x86_64 0:3.6.8-18.el7\r\n\r\n-   python3-pip.noarch 0:9.0.3-8.el7\t\tpython3-setuptools.noarch 0:39.2.0-10.el7\r\n\r\n  \r\n\r\n### 1.3 已安装目录\r\n\r\n\r\n\r\n表2对YUM安装过程产生的文件目录进行说明。\r\n                                                        \r\n\r\n​                                                                 表2 安装目录文件说明\r\n\r\n| **序号** | **文件路径**                               | **描述**                               |\r\n| -------- | ------------------------------------------ | -------------------------------------- |\r\n| 1        | /usr/local/ivorysql/ivorysql-1             | 软件安装目录                           |\r\n| 2        | /var/lib/ivorysql/ivorysql-1/data          | 数据目录（默认）                       |\r\n| 3        | /usr/bin/ivorysql-1-setup                  | 帮助系统管理员进行基本的数据库集群管理 |\r\n| 4        | /usr/lib/systemd/system/ivorysql-1.service | 守护服务                               |\r\n\r\n\r\n\r\n### 1.4 RPM安装\r\n\r\n\r\n\r\n顺便说一下RPM安装，需要按这个顺序安装：\r\n\r\n```\r\nyum install -y libicu libxslt python3\t\t\t\t\t--先安装依赖\r\nrpm -ivh ivorysql1-libs-1.2-1.rhel7.x86_64.rpm\r\nrpm -ivh ivorysql1-1.2-1.rhel7.x86_64.rpm\r\nrpm -ivh ivorysql1-contrib-1.2-1.rhel7.x86_64.rpm --nodeps\r\nrpm -ivh ivorysql1-server-1.2-1.rhel7.x86_64.rpm\r\n```\r\n\r\n所以，使用YUM安装还是很方便的。如果没条件，就单独下载按这个顺序安装吧。\r\n\r\n下载地址：https://yum.highgo.ca/ivorysql.html\r\n\r\n![yum](yum-b.png)\r\n\r\n点击【BROWSE REPOSITORY-1】找到对应的包下载即可（注意：官网没提供依赖包）。\r\n\r\n\r\n\r\n## 初始化数据库\r\n\r\n\r\n\r\nIvorySQL数据库默认初始化以及启停等操作比较简单。\r\n\r\n\r\n\r\n### 2.1 默认初始化\r\n\r\n\r\n\r\n我们可以在root用户下，执行以下命令使用系统默认参数来初始化：\r\n\r\n```\r\n/usr/local/ivorysql/ivorysql-1/bin/ivorysql-1-setup initdb\r\n```\r\n\r\n**说明：由于没有提供SERVICE_NAME，默认会读ivorysql-1。**\r\n\r\n\r\n\r\n启用并启动服务：\r\n\r\n```\r\nsystemctl enable --now ivorysql-1.service\r\n```\r\n\r\n\r\n\r\nivorysql-1-setup的用法：\r\n\r\n```\r\nivorysql-1-setup {initdb|check_upgrade|upgrade} [SERVICE_NAME]\r\n```\r\n\r\n**说明：该命令的详细用法，执行命令“ivorysql-1-setup --help”查看。**\r\n\r\n\r\n\r\n### 2.2 自定义初始化\r\n\r\n\r\n\r\n假如我们有个需求，要制定数据文件路径（/ivorysql/1.2/data/）和端口号（5866），那我们就可以定制初始化。\r\n\r\n\r\n\r\n根据默认的服务文件“/usr/lib/systemd/system/ivorysql-1.service”在相同目录下复制一个新的“ivorysql-5866.service”：\r\n\r\n```\r\ncp /usr/lib/systemd/system/ivorysql-1.service /usr/lib/systemd/system/ivorysql-5866.service\r\n```\r\n\r\n\r\n\r\n修改添加以下内容：\r\n\r\n```\r\nEnvironment=PGDATA=/ivorysql/1.2/data/\r\nEnvironment=PGPORT=5866\r\n```\r\n\r\n\r\n\r\n指定SERVICE_NAME为ivorysql-5866来初始化：\r\n\r\n```\r\n/usr/local/ivorysql/ivorysql-1/bin/ivorysql-1-setup initdb ivorysql-5866\r\n```\r\n\r\n\r\n\r\n启用并启动服务：\r\n\r\n```\r\nsystemctl enable --now ivorysql-5866.service\r\n```\r\n\r\n\r\n\r\n### 2.3 常用服务操作\r\n\r\n\r\n\r\nIvorSQL数据库服务操作命令：\r\n\r\n```\r\nsystemctl start ivorysql-1.service\t\t\t\t--启动数据库服务\r\nsystemctl stop ivorysql-1.service\t\t\t\t--停止数据库服务\r\nsystemctl restart ivorysql-1.service\t\t\t--重启数据库\r\nsystemctl status ivorysql-1.service\t\t\t--查看数据库状态\r\nsystemctl reload ivorysql-1.service\t\t\t--可以满足部分数据库配置修改完后生效\r\n```\r\n\r\n\r\n\r\n## 配置数据库服务\r\n\r\n\r\n\r\n我们这里只是简单配置一下，能本地和远程连接就可以了。\r\n\r\n\r\n\r\n### 3.1 客户端验证\r\n\r\n\r\n\r\n修改 /var/lib/ivorysql/ivorysql-1/data/pg_hba.conf，追加以下内容：\r\n\r\n```\r\nhost    all             all             0.0.0.0/0               scram-sha-256\r\n```\r\n\r\n\r\n\r\n执行以下命令加载配置：\r\n\r\n```\r\nsystemctl reload ivorysql-1.service\r\n```\r\n\r\n\r\n\r\n### 3.2 基本参数\r\n\r\n\r\n\r\n切换到用户ivorysql：\r\n\r\n```\r\nsu - ivorysql\r\n```\r\n\r\n\r\n\r\n通过psql连接数据库：\r\n\r\n```\r\npsql\r\n```\r\n\r\n\r\n\r\n修改监听地址，便于远程连接顺便改一下ivorysql的密码：\r\n\r\n```\r\nalter system set listen_addresses = '*';\r\nalter user ivorysql password '666666';\r\n```\r\n\r\n**说明：用户ivorysql是没有密码的，如果不修改密码，可以修改客户端验证方式为trust，来免密登录。**\r\n\r\n\r\n\r\n退回root用户，重启服务使设置生效：\r\n\r\n```\r\nsystemctl restart ivorysql-1.service\r\n```\r\n\r\n\r\n\r\n## 防火墙\r\n\r\n\r\n\r\n如果开启了防火墙，还需要将端口5333开放：\r\n\r\n```\r\nfirewall-cmd --zone=public --add-port=5333/tcp --permanent\r\nfirewall-cmd --reload\r\n```\r\n\r\n**说明：刚初始化好的ivorysql服务默认端口是5333，如果不开放该端口，外部客户端通过ip连接会失败。**\r\n\r\n\r\n\r\n## 客户端连接数据库\r\n\r\n\r\n\r\n连接IvorySQL数据库服务的客户端工具和PostgreSQL的一样。\r\n\r\n\r\n\r\n### 4.1 psql 连接\r\n\r\n\r\n\r\n操作系统用户ivorysql会话下连接：\r\n\r\n```\r\n[root@Node02 ~]# su - ivorysql \r\nLast login: Wed Apr 27 23:58:57 CST 2022 on pts/0\r\n-bash-4.2$ psql\r\npsql (14.2)\r\nType \"help\" for help.\r\n\r\nivorysql=#\r\n```\r\n\r\n\r\n\r\n### 4.2 DBeaver 连接\r\n\r\n\r\n\r\nDBeaver是一个功能比较强大的开源工具，连接配置如下：\r\n\r\n![yum](yum-c.png)\r\n\r\n\r\n\r\n### 4.3 瀚高 developer 连接\r\n\r\n\r\n\r\n瀚高developer是瀚高自主研发的一个工具，除了可以支持瀚高数据库，还支持PostgreSQL以及IvorySQL数据库。连接配置如下：\r\n\r\n![yum](yum-d.png)\r\n\r\n如果想使用该工具，请关注公众号加入微信群“IvorySQL中国技术交流群”咨询。\r\n\r\n\r\n\r\n## 卸载\r\n\r\n\r\n\r\n由于我们是通过yum安装的，要卸载建议也使用yum，尽量不要使用rpm，可能会造成卸载不完整。当然了，也可以根据yum安装清单去卸载。\r\n\r\n\r\n\r\n### 5.1 备份数据\r\n\r\n\r\n\r\n数据目录在/var/lib/ivorysql/ivorysql-1/data下，所以我们将该目录保护好就可以，最好停止服务，做个备份。\r\n\r\n\r\n\r\n### 5.2 YUM 卸载\r\n\r\n\r\n\r\n首先停止数据库服务：\r\n\r\n```\r\nsystemctl stop ivorysql-1.service\r\n```\r\n\r\n\r\n\r\n先使用“yum history list”确定yum安装的事务ID：\r\n\r\n```\r\n[root@Node02 ~]# yum history list\r\nLoaded plugins: fastestmirror\r\nID     | Login user               | Date and time    | Action(s)      | Altered\r\n-------------------------------------------------------------------------------\r\n     5 | root <root>              | 2022-04-27 12:38 | Install        |   11  <\r\n     4 | root <root>              | 2022-03-26 16:08 | Install        |   35 > \r\n     3 | root <root>              | 2022-03-26 16:07 | I, U           |   19   \r\n     2 | root <root>              | 2022-03-26 16:07 | I, U           |   73   \r\n     1 | System <unset>           | 2022-03-26 15:59 | Install        |  299   \r\nhistory list\r\n```\r\n\r\n\r\n\r\n可以看到ID为5的是执行安装的事务。执行命令卸载（需将XX替换为“5”）：\r\n\r\n```\r\nyum history undo XX\r\n```\r\n\r\n\r\n\r\n也可以使用下面命令来卸载：\r\n\r\n```\r\nyum remove ivorysql-server\r\n```\r\n\r\n\r\n\r\n但该命令卸载并不彻底，只卸载了2个依赖，还有8个依赖未能卸载。可以根据是否保留这些依赖而决定是否使用这种方式卸载。\r\n\r\n\r\n\r\n## 后记\r\n\r\n\r\n\r\n- 更细化的操作，可以参照postgresql的操作。例如，用initdb直接初始化。\r\n\r\n- 大家还可以参考IvorySQL自带文档： /usr/share/doc/ivorysql1-1.2/README.rpm-dist。\r\n\r\n-  有任何问题，欢迎大家到IvorySQL官方社区仓库：github.com/IvorySQL/IvorySQL 提交issue。\r\n\r\n\r\n\r\n\r\n\r\n## 关于IvorySQL\r\n\r\nIvorySQL项目是一个具有广泛生态基础和中国特色的PG开源衍生项目，是瀚高公司设计研发的一款具备强大Oracle兼容能力的开源数据库。具备高兼容性和高可用性，并致力于遵守open-source ways。\r\n\r\n**社区仓库**：github.com/IvorySQL/IvorySQL\r\n\r\n**CSDN**: IvorySQL\r\n\r\n**开源中国**：IvorySQL  \r\n\r\n**墨天轮**：IvorySQL\r\n\r\n---\r\n\r\n>通过订阅邮件列表加入IvorySQL社区： \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>- **官方微信公众号：IvorySQL开源数据库社区**\r\n>\r\n>***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    },
    {
      "id": "IvorySQL-sv",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-sv",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-4-18-sv2022/index.md",
        "title": "IvorySQL亮相于PostgresConf SV 2022 硅谷Postgres大会",
        "description": "硅谷Postgres会议是西海岸最大的PG会议，也是美国乃至全球Postgres年度重要会议之一，于2022年4月7日至8日（PDT）在美国加利福尼亚州圣何塞希尔顿酒店召开。作为面向全球PostgreSQL技术专家、从业者、爱好者的年度技术交流活动，硅谷会议致力于汇集和讨论关于人、Postgres和数据间的关系！会议与主办地硅谷一样极具包容和公平精神，这里汇集了最优秀的演讲者、听众和赞助商，所有人努力为全球Postgres生态系统创造发展机会。",
        "date": "2022-04-18T00:00:00.000Z",
        "formattedDate": "2022年4月18日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "PostgresConf SV",
            "permalink": "/zh-CN/blog/tags/postgres-conf-sv"
          },
          {
            "label": "Database",
            "permalink": "/zh-CN/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/zh-CN/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/zh-CN/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 8.12,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-sv",
          "title": "IvorySQL亮相于PostgresConf SV 2022 硅谷Postgres大会",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PostgresConf SV",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL--YUM源安装",
          "permalink": "/zh-CN/blog/IvorySQL-YUM"
        },
        "nextItem": {
          "title": "PostgresWorld网络研讨会|IvorySQL的深度探讨",
          "permalink": "/zh-CN/blog/IvorySQL-Webinar"
        }
      },
      "content": "> 硅谷Postgres会议是西海岸最大的PG会议，也是美国乃至全球Postgres年度重要会议之一，于2022年4月7日至8日（PDT）在美国加利福尼亚州圣何塞希尔顿酒店召开。作为面向全球PostgreSQL技术专家、从业者、爱好者的年度技术交流活动，硅谷会议致力于汇集和讨论关于人、Postgres和数据间的关系！会议与主办地硅谷一样极具包容和公平精神，这里汇集了最优秀的演讲者、听众和赞助商，所有人努力为全球Postgres生态系统创造发展机会。\r\n>\r\n> 会议现场人数大概有200多人，是疫情以来聚集人数最多的一次线下会议。\r\n>\r\n> **社区核心人员Bruce Momjian出席**，会议由PostgresConf,Joshua D.Drake, Jim Mlodgenski 等组织。来自中国、美国、加拿大、巴西、西班牙、德国、印度、巴基斯坦等多个国家的人员参与。\r\n\r\n\r\n\r\n**瀚高北美研究院兼中国PostgreSQL分会国际顾问委员会秘书长Grant Zhou作为唯一中国代表，将携IvorySQL项目亮相本次会议。**\r\n\r\n以下是由**IvorySQL开源数据库社区**为您带来的硅谷Postgres两日会议简报。\r\n\r\n\r\n\r\n\r\n\r\n## 部分演讲议题\r\n\r\n\r\n\r\n**IvorySQL--一个基于PostgreSQL的兼容Oracle的开源数据库 --by GRANT ZHOU**\r\n\r\n有很多用户需要将他们的应用程序从Oracle迁移到开放源码的Postgres，但是为了支持新的数据库，用户经常需要重新开发应用程序，这很不方便。如果有一个基于Postgres的数据库，并且兼容大多数Oracle语法和函数，对客户来说就太方便了。然而官方的Postgres项目不接受这种代码提交。毕竟，Postgres是Postgres, Oracle是Oracle。因此，IvorySQL项目团队创建一个Oracle兼容的数据库。\r\n\r\n本演讲中介绍了如何基于PG实现与Oracle语法兼容的数据库，并介绍IvorySQL项目。这个项目是一个开源项目(Apache 2.0)，由Highgo软件领导，目前已经发布了基于PostgreSQL 14.2版本的IvorySQL 1.2。\r\n\r\n同时欢迎大家为这个开源的侧重Oracle兼容性的数据库——IvorySQL做出贡献。\r\n\r\n \r\n\r\n**非关系型Postgres --by Bruce Momjian**\r\n\r\nPostgres一直对关系存储提供强大的支持。然而，在许多情况下，关系存储要么效率低下，要么限制过度。这个演讲展示了Postgres扩展到支持非关系存储的许多方式，特别是在一个数据库字段中存储和索引多个值(甚至是不相关的值)的能力。这种存储可以提高效率和访问的简单性，还可以避免实体-属性-值(eav)存储的缺点。演讲涵盖多个字段多值存储的例子，包括数组、范围类型、几何图形、全文搜索、xml、json和记录。\r\n\r\n \r\n\r\n**数字权力和隐私：21世纪的关注--by Andres Arrieta**\r\n\r\n30多年来，电子前沿基金会一直在保护和争取我们的公民自由。在这30年里发生了很多事情:我们与互联网的关系从根本上发生了改变，然而，在很多方面，我们对互联网如何运作的理解仍然停滞不前。如今，互联网已经成为我们生活中不可或缺的核心部分，我们越来越依赖互联网。虽然我们比以往任何时候都更容易接触到互联网提供的众多礼物，但决策者和执法机构对互联网如何运作的理解仍然滞后。在此期间，电子前沿基金会及其使命已经涵盖了技术带来的好或坏的许多方面，并帮助保护那些受其影响的人，同时确保一个光明的未来，通过创新改善我们的生活。\r\n\r\nAndres Arrieta向大家介绍了我们的一些工作、一些关切的领域以及Andres Arrieta认为将有助于我们朝着更美好的未来努力的一些事情。主要是关于数据隐私和消费者权利的理论视角。讨论了隐私的不同方面以及保护个人隐私的选项。\r\n\r\n \r\n\r\n**逻辑复制的过去、现在和未来--by Amit Kapila**\r\n\r\n在这次演讲中，Amit Kapila讲述了逻辑复制在PostgreSQL中是如何发展的。这将解释最近的一些最近的主要增强，比如促进两阶段和正在进行的大型事务的逻辑复制。并分享了Amit Kapila对如何利用该技术为大型企业构建高度可伸缩和可用的数据库解决方案的看法。在那之后，还讨论了在PostgreSQL未来版本中在这个技术领域中讨论的一些重要增强。并且介绍如何增强这项技术，以便将数据从PostgreSQL迁移到其他数据库。\r\n\r\n \r\n\r\n**现代原生云应用的传记--by Karthik Ranganathan**\r\n\r\n \r\n\r\n现代云原生应用程序过着令人兴奋的生活 - 从它们在云中诞生，到处理巨大的计划外成功，再到在云中断中幸存下来并处理全球客户。在本次演讲中，Yugabyte 首席技术官 Karthik Ranganathan 从数据层的角度介绍了Yugabyte 如何处理双向表级复制和高可用性。\r\n\r\n \r\n\r\n**Aurora的亚马逊Babelfish--by chandra pathivada**\r\n\r\n现在奥罗拉的Babelfish已经上市了。这个演示是关于Babelfish如何帮助客户迁移SQL Server工作负载到Postgres。在这个演示中，chandra pathivada演示了什么是Babelfish, Aurora的内部结构，使用Babelfish的SQL Server dba的Aurora，以及应用程序迁移实验室。\r\n\r\n\r\n\r\n\r\n\r\n## 现场照片\r\n\r\n![p](p-one.png)\r\n\r\n![p](p-two.png)\r\n\r\n![p](p-three.png)\r\n\r\n![p](p-four.png)\r\n\r\n![p](p-five.png)\r\n\r\n\r\n\r\n\r\n\r\n## 更多详情内容\r\n\r\n**2022年硅谷Postgres会议官方网址：**\r\nhttps://postgresconf.org/conferences/SV2022\r\n\r\n\r\n\r\n## 关于IvorySQL\r\n\r\nIvorySQL项目是一个具有广泛生态基础和中国特色的PG开源衍生项目，是**瀚高公司**设计研发的一款具备强大Oracle兼容能力的开源数据库。\r\n具备高兼容性和高可用性，并致力于遵守open-source ways。\r\nIvorySQL社区欢迎并赞赏所有类型的贡献，期待您的加入！\r\n\r\n---\r\n\r\n>通过订阅邮件列表加入IvorySQL社区： \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>- 官方微信公众号：IvorySQL开源数据库社区\r\n>\r\n>***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    },
    {
      "id": "IvorySQL-Webinar",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL-Webinar",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-3-25-postgres-world-webinar/index.md",
        "title": "PostgresWorld网络研讨会|IvorySQL的深度探讨",
        "description": "Hi~各位朋友们，我们的PostgresWorld Webinars又回来啦！",
        "date": "2022-03-25T00:00:00.000Z",
        "formattedDate": "2022年3月25日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "PostgresWorld",
            "permalink": "/zh-CN/blog/tags/postgres-world"
          },
          {
            "label": "Database",
            "permalink": "/zh-CN/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/zh-CN/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/zh-CN/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 3.43,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-Webinar",
          "title": "PostgresWorld网络研讨会|IvorySQL的深度探讨",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PostgresWorld",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL亮相于PostgresConf SV 2022 硅谷Postgres大会",
          "permalink": "/zh-CN/blog/IvorySQL-sv"
        },
        "nextItem": {
          "title": "IvorySQL已经来了",
          "permalink": "/zh-CN/blog/IvorySQL"
        }
      },
      "content": "Hi~各位朋友们，我们的PostgresWorld Webinars又回来啦！\r\n\r\nPostgreSQL在国内数据库的发展过程中承担了非常重要的角色，全球众多数据库产品选择PostgreSQL作为技术发展路线。但是**应用程序从Oracle迁移到开源Postgres的问题成为了最大的阻碍**，因此我们创建了IvorySQL开源项目，它是基于最新的PostgreSQL 14并具有强大Oracle兼容性的数据库。\r\n然而我们为什么一定要做IvorySQL开源项目？它和Postgres、Oracle技术上有什么区别？本次网络研讨会邀您一起探讨。\r\n\r\n本期网络研讨会由Grant Zhou带来《IvorySQL - 一个基于PostgreSQL的兼容Oracle的开源数据库》为主题的分享，共同探讨基于PG并兼容Oracle的开源数据库。\r\n\r\n## 嘉宾介绍\r\n\r\n**Grant Zhou**目前居住在加拿大，他是瀚高北美研究院的负责人，并领导PostgreSQL公司开发团队，团队成员来自加拿大，中国和巴基斯坦。他同时担任PostgreSQL中国分会国际顾问委员会的秘书长，也很自豪能成为PostgresConf的组织者和亚洲联络人。他在阿尔卡特朗讯（诺基亚）公司工作了十多年，在高可用性、实时电信系统、数据库技术和Unix/Linux编程方面拥有丰富的经验。\r\n2021年12月，该团队宣布了IvorySQL数据库的第一个可用版本，**这是目前唯一一款基于PostgreSQL、兼容Oracle的开源数据库**。2022年2月28日，基于PostgreSQL 14.2发布了IvorySQL 1.2。\r\n\r\n## 研讨会要点介绍\r\n\r\n有许多用户需要将他们的应用程序从Oracle迁移到开源Postgres，但是为了支持新的数据库，用户经常需要重新开发应用程序，这很不方便。如果有一个基于Postgres的数据库，并且与大多数Oracle语法和函数兼容，那么对于客户来说就太方便了。\r\n但是，官方的Postgres项目不会接受这种代码提交。毕竟，Postgres是Postgres，Oracle是Oracle。\r\n因此，我们创建了一个具有Oracle兼容功能的开源数据库项目。\r\n本次演讲将介绍**如何基于PG实现与Oracle语法兼容的数据库，详细介绍IvorySQL项目的研发过程**。\r\n\r\n## 时间与链接\r\n\r\n - 活动时间：**美国太平洋时间（PDT）3月31日 下午1点-2点 (北京时间凌晨4：00-5：00）进行**，敬请关注。\r\n- 参与注册网址：https://postgresconf.org/accounts/sign_up\r\n- 观看链接：https://postgresconf.org/conferences/PostgresWorld-Webinars-2022/program/proposals/ivorysql-an-open-source-oracle-compatible-database-based-on-postgresql\r\n- 也可添加小助理微信：R-jiaoo，立即报名参与！\r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL",
      "metadata": {
        "permalink": "/zh-CN/blog/IvorySQL",
        "source": "@site/i18n/zh-CN/docusaurus-plugin-content-blog/2022-1-28-ivorysql-arrived/index.md",
        "title": "IvorySQL已经来了",
        "description": "Hello",
        "date": "2022-01-28T00:00:00.000Z",
        "formattedDate": "2022年1月28日",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/zh-CN/blog/tags/ivory-sql"
          },
          {
            "label": "Welcome",
            "permalink": "/zh-CN/blog/tags/welcome"
          },
          {
            "label": "Database",
            "permalink": "/zh-CN/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/zh-CN/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/zh-CN/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/zh-CN/blog/tags/join-us"
          }
        ],
        "readingTime": 3.485,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL",
          "title": "IvorySQL已经来了",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "Welcome",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "PostgresWorld网络研讨会|IvorySQL的深度探讨",
          "permalink": "/zh-CN/blog/IvorySQL-Webinar"
        }
      },
      "content": "![Hello](Hello-banner.png)  \r\n\r\n正当全世界都在为节日打包行李，迎接新年的到来时，我们正努力工作，并为我们的团队从2021年初开始的项目做最后的润色。那天是12月15日，就在那天结束之前，我们得到了所有的绿灯，在清理桌子之前，我们默默地发布了IvorySQL的第一个版本。\r\n\r\n## IvorySQL概览\r\n\r\nIvorySQL是**Apache 2.0**许可的开源Oracle兼容PostgreSQL。IvorySQL的第一个版本源自PostgreSQL 14，它坚定地承诺始终保持100%的PostgreSQL兼容性，并可以直接替换PostgreSQL的最新版本。 \r\n\r\nIvorySQL在现有标准PostgreSQL配置参数的基础上添加了一个兼容的_db GUC。 ```compatible_db``` 是一个切换开关，用于在Oracle和PostgreSQL兼容模式之间切换。IvorySQL的第二大亮点是 ```PL/iSQL``` 支持oracle PL/SQL语法的过程语言。这两个新增功能在不破坏标准PostgreSQL兼容性的情况下，是IvorySQL的Oracle兼容性的核心。```compatible_db``` 切换在Oracle和PostgreSQL中存在的函数和对象的行为，并以不同的方式运行，而```PL/iSQL``` 为在最小的更改上运行IORYSQL的Oracle代码奠定了基础。 \r\n\r\nIvorySQL具有许多与Oracle兼容的功能，包括Oracle风格的**PACKAGES**, **DATA Types**, 和 **Conversion Functions**. 有关IvorySQL中Oracle兼容性功能的详细信息，请参阅 *[IvorySQL文档](https://www.ivorysql.org/zh-CN/docs/intro)*   \r\n\r\n## 我们致力于遵循开源方式的原则\r\n\r\nIvorySQL致力于遵守 ***[open-source ways](https://opensource.com/open-source-way)*** 我们坚信建设一个健康、包容的社区。我们坚持认为好的想法可以来自任何地方，最好的想法应该获胜。只有包含不同的观点，我们才能做出最佳决策。虽然IvorySQL的第一个版本主要关注Oracle兼容性功能，但未来的路线图和功能集将由社区以开源的方式确定。\r\n\r\n## 为IvorySQL做贡献\r\n\r\n有很多方法可以帮助IvorySQL。您可以通过提供文档更新和文档翻译来做出贡献。如果你有设计技能，你可以为IvorySQL网站项目做出贡献。\r\n测试IvorySQL和报告问题，通过发布bug修复或新功能的pull请求，或回答邮件列表上的问题，是对IvorySQL项目做出贡献的一些方式，IvorySQL社区欢迎并赞赏所有类型的贡献。\r\n\r\n## 快速开始\r\n\r\n所有与IvorySQL相关的项目，包括数据库服务器、网站和文档，都通过Github托管和管理。您可以通过IvorySQL [Github page](https://github.com/IvorySQL/)下载源代码或发布的软件包.  \r\n\r\n浏览 http://www.ivorysql.org 阅读项目文档和贡献指南。\r\n\r\n---\r\n\r\n>通过订阅邮件列表加入IvorySQL社区： \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    }
  ]
}