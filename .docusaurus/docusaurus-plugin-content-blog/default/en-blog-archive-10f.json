{
  "blogPosts": [
    {
      "id": "IvorySQL-package",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-package",
        "source": "@site/blog/2022-6-10-package/index.md",
        "title": "IvorySQL功能点介绍--Package（包）",
        "description": "IvorySQL 是一个开源项目，该项目的核心目标之一是提供 oracle 兼容功能，以便在 IvorySQL 数据库服务器上使用 oracle 代码。",
        "date": "2022-06-10T00:00:00.000Z",
        "formattedDate": "June 10, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "功能点",
            "permalink": "/en/blog/tags/功能点"
          },
          {
            "label": "Database",
            "permalink": "/en/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/en/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 7.745,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-package",
          "title": "IvorySQL功能点介绍--Package（包）",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "功能点",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "nextItem": {
          "title": "PGCon2022 meeting review | Technical explanation of IvorySQL project",
          "permalink": "/en/blog/IvorySQL-PGCon2022"
        }
      },
      "content": "IvorySQL 是一个开源项目，该项目的**核心目标之一是提供 oracle 兼容功能**，以便在 IvorySQL 数据库服务器上使用 oracle 代码。\r\n\r\n\r\n\r\n在 PostgreSQL 之上提供 Oracle 兼容是一项多维任务。 从提供与 Oracle 兼容的 SQL 语法到添加对 PostgreSQL 中缺失或行为不同的数据类型的支持。 Oracle 兼容性的**主要核心之一是在 PostgreSQL 中提供兼容的过程语言PL（procedural language），它在功能和语法上与 Oracle 的 PL/SQL 兼容**。 \r\n\r\n\r\n\r\n为此，**IvorySQL 添加了一种新的 PL 语言 PL/iSQL，它接受、理解和执行 PL/SQL 语法**。 如您所知，Oracle PL/SQL 的核心特性之一是 PACKAGES（包）。Package（包）是 Oracle 中的一个模式对象，它包含一组相关功能的定义，是 Oracle 使用最广泛的特性之一。\r\n\r\n\r\n\r\n因此，本文将介绍Package（包），并举例说明**如何用 IvorySQL 创建、使用和销毁 Oracle 样式的包**。\r\n\r\n\r\n\r\n# 包（Package）\r\n\r\n\r\n\r\n那么什么是Package(包)？ 包是 PL/iSQL 代码的分组，按逻辑程序单元划分。 换句话说，一个包可以被认为是相关函数、过程、变量或游标的集合，这个集合可以通过通用公共名称来访问。\r\n\r\nIvorySQL 内置PL/iSQL语言，可以接受、理解和执行PL/SQL代码。包使用相同的语言，并且有两个主要组件。\r\n\r\n\r\n\r\n- **包规范（Specification）**\r\n\r\n包规范列出了可以从包外部访问的所有项目,例如函数、过程、变量和游标。这也称为公共规范。\r\n\r\n- **包体(Body)**\r\n\r\n包体包含包规范中列出的所有函数和过程的实现。除此之外，它还可以实现更多的功能、过程或其他元素。\r\n\r\n\r\n\r\n这些不在包规范中的元素将被视为包的私有成员，并且只能在包内引用它们。 不允许外部访问。\r\n\r\n\r\n\r\n包体也可以有一个特殊的代码块，称为初始化块。 这是一个特殊的块，因为这个块在每个会话中只执行一次，在包第一次被访问的最开始。\r\n\r\n\r\n\r\n让我们看一些代码示例，看看包是如何运行的。\r\n\r\n\r\n\r\n# 示例\r\n\r\n\r\n\r\n### 通用示例\r\n\r\n\r\n\r\n首先让我们设置兼容模式，这样我们就可以访问 IvorysSQL数据库中可用的 Oracle 兼容特性。\r\n\r\nSET compatible_mode TO oracle;\r\n\r\n```\r\nCREATE TABLE books (\r\n    id     INT, \r\n    title  VARCHAR2(100), \r\n    author VARCHAR2(100),\r\n    price  NUMBER);\r\n```\r\n\r\n```\r\nINSERT INTO books VALUES (10, 'The Hobbit', 'J. R. R. Tolkien', 10.0);\r\nINSERT INTO books VALUES (11, 'Winnie-the-Pooh', 'A. A. Milne', 5.0);\r\nINSERT INTO books VALUES (12, 'Peter Pan', 'James Matthew Barrie', 4.0);\r\nINSERT INTO books VALUES (13, 'Charlie and the Chocolate Factory', 'Roald Dahl', 5.0);\r\nINSERT INTO books VALUES (14, 'SThe Jungle Book', 'Rudyard Kipling', 9.0);\r\nINSERT INTO books VALUES (15, 'The Little White Bird', 'James Matthew Barrie', 3.0);\r\n```\r\n\r\n\r\n\r\n让我们来创建一个简单的包。这个包声明了一个游标来列出所有可用的图书，并包含一些子程序来列出、添加和删除书籍。同时，它还声明了一些私有变量来计数和保存图书信息。\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE mybooks AS\r\n    CURSOR      booksinfo IS SELECT * from BOOKS;\r\n\r\n    PROCEDURE list_books;\r\n    FUNCTION add_book(title VARCHAR2(100), author VARCHAR2(100), \r\n         price NUMBER) RETURN bool;\r\n    PROCEDURE remove_book(book_title VARCHAR2(100));\r\nEND;\r\nivorysql$# /\r\nCREATE PACKAGE\r\n```\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE BODY mybooks AS\r\n\r\n    -- declare private variables\r\n    bookinfo    booksinfo%rowtype; \r\n    books_count INT;\r\n\r\n    PROCEDURE list_books AS\r\n    BEGIN\r\n        OPEN booksinfo;\r\n        RAISE INFO 'Book Info:';\r\n        RAISE INFO '';\r\n        LOOP\r\n            FETCH booksinfo into bookinfo;\r\n            EXIT WHEN NOT FOUND;\r\n\r\n            RAISE INFO '  Name    = %', bookinfo.title;\r\n            RAISE INFO '  Author  = %', bookinfo.author;\r\n            RAISE INFO '  Price   = %', bookinfo.price;\r\n            RAISE INFO '------------------------------';\r\n        END LOOP;\r\n        RAISE INFO 'Total Books   = %', books_count;\r\n        CLOSE booksinfo;\r\n    END;\r\n\r\n    FUNCTION add_book(title VARCHAR2(100), author VARCHAR2(100),\r\n        price NUMBER) RETURN bool AS\r\n    BEGIN\r\n        INSERT INTO BOOKS VALUES (\r\n            books_count + 1,\r\n            title,\r\n            author,\r\n            price);\r\n        \r\n        books_count := books_count + 1;\r\n        RETURN true;\r\n\r\n        EXCEPTION WHEN OTHERS THEN\r\n            RETURN false;\r\n    END;\r\n\r\n    PROCEDURE remove_book(book_title VARCHAR2(100)) AS\r\n    BEGIN\r\n        DELETE FROM BOOKS WHERE title = book_title;\r\n\r\n        EXCEPTION WHEN OTHERS THEN\r\n            RAISE INFO 'Book % not found', book_title;\r\n    END;\r\n\r\n-- initializer block\r\nBEGIN           \r\n    books_count := 0;\r\n    SELECT count(*) INTO books_count\r\n        FROM BOOKS;\r\nEND;\r\nivorysql$# /\r\nCREATE PACKAGE BODY\r\n```\r\n\r\n\r\n\r\n让我们检验这些数据。这匿名块试图访问该包的私有成员，这将会导致错误。\r\n\r\n```\r\nivorysql=# DECLARE\r\nivorysql$#   nbooks int := 0;\r\nivorysql$# BEGIN\r\nivorysql$#     nbooks := mybooks.books_count;\r\nivorysql$#     RAISE INFO 'Total Books   = %', nbooks;\r\nivorysql$# END;\r\nivorysql$# /\r\n2022-05-26 16:35:32.328 PKT [63554] ERROR:  package private variable (\"mybooks.books_count\") is not accessible\r\n\r\n```\r\n\r\n\r\n\r\n让我们使用包的子程序列出所有可用的书籍。 `list_books`  `mybooks`\r\n\r\n```\r\nivorysql=# BEGIN\r\nivorysql$#     mybooks.list_books;\r\nivorysql$# END;\r\nivorysql$# /\r\nINFO:  Book Info:\r\nINFO:  \r\nINFO:    Name    = The Hobbit\r\nINFO:    Author  = J. R. R. Tolkien\r\nINFO:    Price   = 10\r\nINFO:  ------------------------------\r\nINFO:    Name    = Winnie-the-Pooh\r\nINFO:    Author  = A. A. Milne\r\nINFO:    Price   = 3\r\n....\r\n....\r\nINFO:  Total Books   = 6\r\nDO\r\nivorysql=#\r\n```\r\n\r\n\r\n\r\n让我们使用包的子程序添加一本新书。 `add_book` `mybooks `\r\n\r\n```\r\nDECLARE\r\n  added bool;\r\nBEGIN\r\n    added := mybooks.add_book('The Cat in the Hat', 'Dr. Seuss', 10);\r\n    IF added = TRUE THEN\r\n        RAISE INFO 'new book added';\r\n    END IF;\r\nEND;\r\n/\r\n```\r\n\r\n\r\n\r\n### 删除包\r\n\r\n可以使用以下命令删除包体或完成包：\r\n\r\n- DROP PACKAGE BODY [package name]\r\n\r\n```\r\nivorysql=# DROP PACKAGE BODY mybooks;\r\nDROP PACKAGE BODY\r\n```\r\n\r\n\r\n\r\n- DROP PACKAGE [package name]\r\n\r\n```\r\nivorysql=# DROP PACKAGE mybooks;\r\nDROP PACKAGE\r\n```\r\n\r\n\r\n\r\n### 具有不同权限的包调用\r\n\r\n我们将创建两个具有调用者和定义者权限的包，并查看结果以了解它们之间的区别。\r\n\r\n```\r\nivorysql=> SELECT current_user;\r\n current_user \r\n--------------\r\n ivorysql\r\n(1 row)\r\n```\r\n\r\n\r\n\r\n--创建具有INVOKER权限的包\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE pkg_invrights AUTHID CURRENT_USER AS\r\n    PROCEDURE curr_user;\r\nEND;\r\n/\r\n\r\nCREATE OR REPLACE PACKAGE BODY pkg_invrights AS\r\n    PROCEDURE curr_user AS\r\n    BEGIN\r\n        RAISE INFO 'Current User: %', current_user;\r\n    END;\r\nEND;\r\n/\r\n```\r\n\r\n\r\n\r\n--创建一个具有DEFINER权限的包\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE pkg_defrights AUTHID DEFINER AS\r\n    PROCEDURE curr_user;\r\nEND;\r\n/\r\n\r\nCREATE OR REPLACE PACKAGE BODY pkg_defrights AS\r\n    PROCEDURE curr_user AS\r\n    BEGIN\r\n        RAISE INFO 'Current User: %', current_user;\r\n    END;\r\nEND;\r\n/\r\n```\r\n\r\n\r\n\r\n让我们先查看具有调用程序权限的包。\r\n\r\n```\r\nivorysql=> CALL pkg_invrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\n\r\n\r\n\r\n让我们来看看具有定义权限的包。\r\n\r\n```\r\nivorysql=> CALL pkg_defrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\n\r\n\r\n\r\n让我们切换到另一个名为ivuser的用户。\r\n\r\n```\r\nivorysql=> \\c ivorysql ivuser;\r\nYou are now connected to database \"ivorysql\" as user \"ivuser\".\r\n```\r\n\r\n\r\n\r\n让我们先看看具有调用程序权限的包。\r\n\r\n```\r\nivorysql=> CALL pkg_invrights.curr_user;\r\nINFO:  Current User: ivuser\r\nCALL\r\n```\r\n\r\n\r\n\r\n让我们看看具有定义权限的包。\r\n\r\n```\r\nivorysql=> CALL pkg_defrights.curr_user;\r\nINFO:  Current User: ivorysql\r\nCALL\r\n```\r\n\r\n\r\n\r\n# 总结\r\n\r\n\r\n\r\n如上所示，当调用具有调用者权限(pkg_invrights)的包时，它使用的是调用该包的用户的特权。但是，当调用(pkg_defrights)时，它仍然使用包所有者的特权。\r\n\r\n\r\n\r\n\r\n\r\n![p](p-1.png)\r\n\r\n---\r\n\r\n>通过订阅邮件列表加入IvorySQL社区： \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>- 官方微信公众号：**IvorySQL开源数据库社区**\r\n>\r\n>***还有，别忘了在[Github](https://github.com/IvorySQL/IvorySQL)给我们一个 :star: ***"
    },
    {
      "id": "IvorySQL-PGCon2022",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-PGCon2022",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-6-2-PGCon2022/index.md",
        "title": "PGCon2022 meeting review | Technical explanation of IvorySQL project",
        "description": "Grant Zhou, head of Highgo North America Research Institute, delivered the technical explanation of IvorySQL project at the meeting on May 26, 2022 Ottawa time.",
        "date": "2022-06-02T00:00:00.000Z",
        "formattedDate": "June 2, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "PGCon2022， PostgreSQL",
            "permalink": "/en/blog/tags/pg-con-2022-，-postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 0.85,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-PGCon2022",
          "title": "PGCon2022 meeting review | Technical explanation of IvorySQL project",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PGCon2022， PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL功能点介绍--Package（包）",
          "permalink": "/en/blog/IvorySQL-package"
        },
        "nextItem": {
          "title": "Compiling and Installing IvorySQL on Linux",
          "permalink": "/en/blog/IvorySQL-Linux"
        }
      },
      "content": "Grant Zhou, head of Highgo North America Research Institute, delivered the technical explanation of IvorySQL project at the meeting on May 26, 2022 Ottawa time.\r\n\r\nThis conference mainly introduces who we are, what IvorySQL is, IvorySQL key function points, community contribution guide, developer guide, etc. Based on PostgreSQL 14, IvorySQL adds some exciting features on top of PostgreSQL!\r\n\r\n\r\n\r\n\r\n\r\nIvorySQL provides the following features based on PostgreSQL:\r\n\r\n- Oracle compatible Packages\r\n\r\n- Oracle compatible PL/iSQL procedural language\r\n\r\n- GUC to switch between Oracle and PostgreSQL modes\r\n\r\n- Oracle compatible syntax for various DDL operations\r\n\r\n- Oracle compatible date/time functions\r\n\r\n- Built-in Orafce (https://github.com/orafce/orafce)\r\n\r\n\r\n\r\nMany more …,  please read the release notes from https://www.ivorysql.org/zh-CN/releases-page\r\n\r\n- Please check the Issues tab in GitHub regularly to get the latest feature lists\r\n\r\n- Welcome everyone to submit the features you want here\r\n\r\nhttps://github.com/IvorySQL/IvorySQL/issues\r\n\r\n\r\n\r\nbilibili  Video explanation link:\r\n\r\nhttps://www.bilibili.com/video/BV17U4y1y7nZ?spm_id_from=333.999.list.card_archive.click\r\n\r\n\r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL-Linux",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-Linux",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-5-17-linux/index.md",
        "title": "Compiling and Installing IvorySQL on Linux",
        "description": "IvorySQL can be built on Linux, OSX, Unix, and Windows platforms, and is basically the same as PostgreSQL compiled and installed. This article describes the steps for compiling source code on a Linux-based system.",
        "date": "2022-05-17T00:00:00.000Z",
        "formattedDate": "May 17, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "Welcome",
            "permalink": "/en/blog/tags/welcome"
          },
          {
            "label": "Linux",
            "permalink": "/en/blog/tags/linux"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 5.72,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-Linux",
          "title": "Compiling and Installing IvorySQL on Linux",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "Welcome",
            "Linux",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "PGCon2022 meeting review | Technical explanation of IvorySQL project",
          "permalink": "/en/blog/IvorySQL-PGCon2022"
        },
        "nextItem": {
          "title": "Install software through the YUM source",
          "permalink": "/en/blog/IvorySQL-YUM"
        }
      },
      "content": "IvorySQL can be built on Linux, OSX, Unix, and Windows platforms, and is basically the same as PostgreSQL compiled and installed. This article describes the steps for compiling source code on a Linux-based system.\r\n\r\n\r\n\r\n## Preparation\r\n\r\n\r\n\r\n### 1.1 Obtaining the IvorySQL source code\r\n\r\nFor Windows or Linux, if you have Git installed, you can use git to download:\r\n\r\ngit clone https://github.com/IvorySQL/IvorySQL.git\r\n\r\ngit clone https://gitee.com/IvorySQL/IvorySQL.git\r\n\r\n\r\n\r\nOr go directly to Github or Gitee to download:\r\n\r\nhttps://github.com/IvorySQL/IvorySQL\r\n\r\nhttps://gitee.com/IvorySQL/IvorySQL\r\n\r\nGithub can be a bit slow, use it if it works, and switch to Gitee if it doesn't.\r\n\r\n\r\n\r\nAs of this writing, the latest release of IvorySQL is 1.2, released on February 28, 2022.\r\n\r\n![L](L-a.png)\r\n\r\nThe source version used in this article is also IvorySQL 1.2.\r\n\r\n\r\n\r\n### 1.2 Installing the dependency packages\r\n\r\nTo compile IvorySQL from source, you must ensure that a prerequisite packages are available on your system.\r\n\r\nRun the following command to install related packages:\r\n\r\n```\r\nsudo yum install -y bison-devel readline-devel zlib-devel openssl-devel wget\r\nsudo yum groupinstall -y 'Development Tools'\r\n```\r\n\r\n**Note: \"Development Tools\" includes GCC, make, Flex, bison.**\r\n\r\n\r\n\r\n\r\n\r\n## Compilation and installation\r\n\r\nThe source code obtained in front of the folder IvorySQL, next we will enter this folder for operation.\r\n\r\n\r\n\r\n### 2.1 configuration\r\n\r\nRun the following command as the Root user:\r\n\r\n```\r\n./configure\r\n```\r\n\r\n**Note: Since --prefix is not provided, /usr/local/pgSQL will be used as default installation path.**\r\n\r\n\r\n\r\nTo use a different installation path, such as \"/ usr/local/ivorysql/ivorysql - 1.2\" :\r\n\r\n```\r\n./configure --prefix=/usr/local/ivorysql/ivorysql-1.2\r\n```\r\n\r\n\r\n\r\nFor more configure parameters, try ./configure --help. Also check out the PostgreSQL manual.\r\n\r\n \r\n\r\n### 2.2 Compilation and Installation\r\n\r\nAfter the configuration is complete, run make to compile:\r\n\r\n```\r\nmake\r\n```\r\n\r\n\r\n\r\nTo test the newly compiled service using regression tests before installing it, use either of the following commands:\r\n\r\n```\r\nmake check\r\nmake check-world\r\n```\r\n\r\n\r\n\r\nThen install:\r\n\r\n```\r\nmake install\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Initialize the database service\r\n\r\nWe only have a simple configuration here, can be local and remote connection is ok.\r\n\r\n\r\n\r\n### 3.1 Creating an OS User\r\n\r\nIn the root session, create user ivorysql:\r\n\r\n```\r\n/usr/sbin/groupadd ivorysql\r\n/usr/sbin/useradd -g ivorysql ivorysql -c \"IvorySQL1.2 Server\"\r\npasswd ivorysql\r\n```\r\n\r\n\r\n\r\n### 3.2 Creating a Data Directory\r\n\r\nNext you need to create the data directory and change the permissions. Run the following command in the root session.\r\n\r\n```\r\nmkdir -p /ivorysql/1.2/data\r\nchown -R ivorysql.ivorysql /ivorysql/1.2/\r\n```\r\n\r\n**Note: The data directory is not placed in \"/var/lib/ivorysql/ivorysql-1/data\" when you do installation using the RPMs.\r\n\r\n \r\n\r\n### 3.3 Environment Variables\r\n\r\nSwitch to ivorysql user, modify the /home/ivorysqL/. bash_profile file, and configure environment variables:\r\n\r\n```\r\numask 022\r\nexport LD_LIBRARY_PATH=/usr/local/pgsql/lib:$LD_LIBRARY_PATH\r\nexport PATH=/usr/local/pgsql/bin:$PATH\r\nexport PGDATA=/ivorysql/1.2/data\r\n```\r\n\r\n\r\n\r\nMake environment variables take effect in the current IVorysQL user session:\r\n\r\n```\r\nsource .bash_profile\r\n```\r\n\r\nYou can also log in again or start a session with a new user ivorysQL.\r\n\r\n \r\n\r\n### 3.4 Configuring the Firewall\r\n\r\nIf the firewall is enabled, port 5333 needs to be opened:\r\n\r\n```\r\nfirewall-cmd --zone=public --add-port=5333/tcp --permanent\r\nfirewall-cmd --reload\r\n```\r\n\r\n**Note: The default port is 5333. If this port is disabled, external clients will not be able to connect to the IP address.**\r\n\r\n \r\n\r\n### 3.5 the initialization\r\n\r\nIn user ivorysql, simply execute initdb to complete the initialization:\r\n\r\n```\r\ninitdb\r\n```\r\n\r\n**Note: InitDB operates in the same way as PostgreSQL, and can be initialized in the same way as PG.**\r\n\r\n \r\n\r\n### 3.6 Starting the Database\r\n\r\nUse pg_ctl to start the database service:\r\n\r\n```\r\npg_ctl start\r\n```\r\n\r\n\r\n\r\nCheck the status, the startup is successful:\r\n\r\n```\r\npg_ctl status\r\n```\r\n\r\npg_ctl: server is running (PID: 29549)\r\n\r\n/usr/local/pgsql/bin/postgres\r\n\r\n\r\n\r\n\r\n\r\n## Configure services\r\n\r\nHere is a simple configuration, can be local and remote connection is ok\r\n\r\n\r\n\r\n### 4.1 Client Authentication\r\n\r\nAdd the following information to /ivorysql/1.2/data/pg_hba.conf:\r\n\r\n```\r\nhost    all             all             0.0.0.0/0               trust\r\n```\r\n\r\n**Note: this is trust, which means you can log in without secret.**\r\n\r\n\r\n\r\nRun the following command to load the configuration:\r\n\r\n```\r\npg_ctl reload\r\n```\r\n\r\n \r\n\r\n### 4.2 Basic Parameters\r\n\r\nConnect to database through PSQL:\r\n\r\n```\r\npsql\r\n```\r\n\r\n\r\n\r\nModify listening address:\r\n\r\n```\r\nalter system set listen_addresses = '*';\r\n```\r\n\r\n**Note: By default the server does not allow connections from external hosts.**\r\n\r\n\r\n\r\nRestart the service for the Settings to take effect:\r\n\r\n```\r\npg_ctl restart\r\n```\r\n\r\n \r\n\r\n### 4.3 Daemon Service\r\n\r\nCreate service file:\r\n\r\n```\r\ntouch /usr/lib/systemd/system/ivorysql.service\r\n```\r\n\r\n\r\n\r\nThe edited content is as follows:\r\n\r\n```\r\n[Unit]\r\nDescription=IvorySQL 1.2 database server\r\nDocumentation=https://www.ivorysql.org\r\nRequires=network.target local-fs.target\r\nAfter=network.target local-fs.target\r\n\r\n[Service]\r\nType=forking\r\n\r\nUser=ivorysql\r\nGroup=ivorysql\r\n\r\nEnvironment=PGDATA=/ivorysql/1.2/data/\r\n\r\nOOMScoreAdjust=-1000\r\n\r\nExecStart=/usr/local/pgsql/bin/pg_ctl start -D ${PGDATA}\r\nExecStop=/usr/local/pgsql/bin/pg_ctl stop -D ${PGDATA}\r\nExecReload=/usr/local/pgsql/bin/pg_ctl reload -D ${PGDATA}\r\n\r\nTimeoutSec=0\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\n**Note: There are many ways to write service. Be careful when using it in the production environment. Repeat the test several times.**\r\n\r\n\r\n\r\nStop the database service started by pg_ctl, enable the systemd service, and start:\r\n\r\n```\r\nsystemctl enable --now ivorysql.service\r\n```\r\n\r\n\r\n\r\nIvorSQL Database service operation commands:\r\n\r\n```\r\nsystemctl start ivorysql.service\t\t\t--启动数据库服务\r\nsystemctl stop ivorysql.service\t\t\t\t--停止数据库服务\r\nsystemctl restart ivorysql.service\t\t\t--重启数据库\r\nsystemctl status ivorysql.service\t\t\t--查看数据库状态\r\nsystemctl reload ivorysql.service\t\t\t--可以满足部分数据库配置修改完后生效\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## Database Client\r\n\r\nThe IvorySQL client is the same as the PostgreSQL client.\r\n\r\n\r\n\r\n### 5.1 PSQL connection\r\n\r\nConnecting from ivorysql OS user:\r\n\r\n```\r\n[ivorysql@Node02 ~]$ psql\r\npsql (15devel)\r\nType \"help\" for help.\r\n\r\nivorysql=#\r\n```\r\n\r\n \r\n\r\n### 5.2 DBeaver connection\r\n\r\nDBeaver is a powerful open source tool with the following connectivity configurations:\r\n\r\n![L](L-b.png)\r\n\r\n\r\n\r\n### 5.3 Connect using HighGo Developer\r\n\r\nHighGo Developer is a tool independently developed by Highgo, which supports not only Highgo database, but also PostgreSQL and IvorySQL database. The connection configuration is as follows:\r\n\r\n![L](L-c.png)\r\n\r\n\r\n\r\n\r\n\r\n## Uninstall\r\n\r\nIf required IvorySQL can be uninstalled by compiling and uninstalling.\r\n\r\n\r\n### 6.1 Backing Up Data\r\n\r\nThe data directory is under \"/ ivorysQL /1.2/data\", so we can protect the directory, It is recomended to stop the database service and make a backup.\r\n\r\n\r\n\r\n### 6.2 Compilation and Uninstallation\r\n\r\nSwitch to the source directory and run the following commands:\r\n\r\n```\r\nmake uninstall\r\nmake clean\r\n```\r\n\r\n\r\n\r\nDelete residual directories and files:\r\n\r\n```\r\nsystemctl disable ivorysql.servicemake\t\t\t\t\t--Disable the service\r\nmv /usr/lib/systemd/system/ivorysql.service /tmp/\t\t--delete or move the service file to /tmp\r\nrm -fr /usr/local/pgsql\t\t\t\t\t\t\t\t\t--Remove the installed files\r\n```\r\n\r\nThe ivorysql user and the corresponding environment variables can be cleared according to the situation.\r\n\r\nThe rest is the data directory \"/ ivorysQL /1.2/data\", please be sure to take a backup before processing.\r\n\r\nThere are installed dependency packages, you can decide whether to uninstall according to the situation.\r\n\r\n \r\n\r\n \r\n\r\n## Postscript\r\n\r\n\r\n\r\n- For more detailed operations, see PostgreSQL.\r\n\r\n- You can also refer to the IvorySQL source code under the documentation: /root/ivorysql/readme.md.\r\n\r\n- You can also open a link to the website:\r\n\r\n  https://gitee.com/IvorySQL/IvorySQL/blob/master/README.md。\r\n\r\n- If you have any question, welcome to the official community IvorySQL warehouse: **github.com/IvorySQL/IvorySQL**  submit issue.\r\n\r\n \r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL-YUM",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-YUM",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-5-6-yum/index.md",
        "title": "Install software through the YUM source",
        "description": "Install software through the YUM source",
        "date": "2022-05-06T00:00:00.000Z",
        "formattedDate": "May 6, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "Welcome",
            "permalink": "/en/blog/tags/welcome"
          },
          {
            "label": "YUM",
            "permalink": "/en/blog/tags/yum"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 6.835,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-YUM",
          "title": "Install software through the YUM source",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "Welcome",
            "YUM",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "Compiling and Installing IvorySQL on Linux",
          "permalink": "/en/blog/IvorySQL-Linux"
        },
        "nextItem": {
          "title": "IvorySQL at PostgresConf SV 2022",
          "permalink": "/en/blog/IvorySQL-sv"
        }
      },
      "content": "## Install software through the YUM source\r\n\r\n\r\n\r\nThis section uses Centos7.9 as an example to show how to install the IvorySQL database. Here is the simplest YUM source installation.\r\n\r\n \r\n\r\n### 1.1 Installing the YUM Source\r\n\r\n \r\n\r\nDownload address: https://yum.highgo.ca/ivorysql.html\r\n\r\n \r\n\r\nClick \"DOWNLOAD REPO RPM\" to DOWNLOAD ivorysqL-release-1.0-1.noarch. RPM and upload it to Centos7.9:\r\n\r\n![Y](Y-a.png)\r\n\r\nOr use wget on Centos7 to download:\r\n\r\n```\r\nwget https://yum.highgo.ca/dists/ivorysql-rpms/repo/ivorysql-release-1.0-1.noarch.rpm\r\n```\r\n\r\n \r\n\r\nInstall ivorysql - release - 1.0-1. Noarch. RPM:\r\n\r\n```\r\nrpm -ivh ivorysql-release-1.0-1.noarch.rpm\r\n```\r\n\r\nAfter installation, will create the YUM source configuration file: / etc/yum.repos. d/ivorysql.repo.\r\n\r\n \r\n\r\nSearch to view related installation packages:\r\n\r\n```\r\nyum search ivorysql\r\n```\r\n\r\n\r\n\r\nThe search results are described in Table 1:\r\n\r\nTable 1 Description of YUM sources\r\n\r\n| **No.** | **Package Name**                                             | **Description**                                              |\r\n| ------- | ------------------------------------------------------------ | ------------------------------------------------------------ |\r\n| 1       | [ivorysql1.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-1.2-1.rhel7.x86_64.rpm) | IvorySQL client program and library files                    |\r\n| 2       | [ivorysql1-contrib.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-contrib-1.2-1.rhel7.x86_64.rpm) | Contributed source code and binaries shipped with IvorySQL   |\r\n| 3       | ivorysql1-devel.x86_64                                       | IvorySQL development header files and libraries              |\r\n| 4       | ivorysql1-docs.x86_64                                        | Additional documentation for IvorySQL                        |\r\n| 5       | [ivorysql1-libs.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-libs-1.2-1.rhel7.x86_64.rpm) | Shared libraries required by all IvorySQL clients            |\r\n| 6       | ivorysql1-llvmjit.x86_64                                     | Instant compilation support for IvorySQL                     |\r\n| 7       | ivorysql1-plperl.x86_64                                      | Procedure language Perl for IvorySQL                         |\r\n| 8       | ivorysql1-plpython3.x86_64                                   | The procedure language Python3 for IvorySQL                  |\r\n| 9       | ivorysql1-pltcl.x86_64                                       | The procedure language Tcl for IvorySQL                      |\r\n| 10      | [ivorysql1-server.x86_64](https://yum.highgo.ca/dists/ivorysql-rpms/1/redhat/rhel-7-x86_64/ivorysql1-server-1.2-1.rhel7.x86_64.rpm) | Create and run programs required by the IvorySQL server      |\r\n| 11      | ivorysql1-test.x86_64                                        | Test suite shipped with IvorySQL                             |\r\n| 12      | ivorysql-release.noarch                                      | Highgo Basic Software Co., LTD. Yum source configuration RPM package |\r\n\r\n**Note: 1, 2, 5, 10 are required for RPM package installation, hyperlinks can be downloaded separately.**\r\n\r\n \r\n\r\n### 1.2 installation IVORYSQL\r\n\r\nTo install the database service, install ivorysQL1-Server.\r\n\r\nRun the following command in the user root session:\r\n\r\n```\r\nyum install -y ivorysql1-server\r\n```\r\n\r\n\r\n\r\n**Installation List:**\r\n\r\nivorysql1-server.x86_64 0:1.2-1.rhel7  \r\n\r\n\r\n\r\n**Dependent installation:**\r\n\r\n-  ivorysql1.x86_64 0:1.2-1.rhel7\t\t\tivorysql1-contrib.x86_64 0:1.2-1.rhel7\r\n\r\n-  ivorysql1-libs.x86_64 0:1.2-1.rhel7\t\tlibicu.x86_64 0:50.2-4.el7_7\r\n\r\n-  libtirpc.x86_64 0:0.2.4-0.16.el7\t\t\tlibxslt.x86_64 0:1.1.28-6.el7\r\n\r\n-  python3.x86_64 0:3.6.8-18.el7\t\t\tpython3-libs.x86_64 0:3.6.8-18.el7\r\n\r\n-  python3-pip.noarch 0:9.0.3-8.el7\t\tpython3-setuptools.noarch 0:39.2.0-10.el7\r\n\r\n \r\n\r\n### 1.3 Installed Directory\r\n\r\n\r\n\r\nTable 2 describes the file directories generated during the YUM installation process.\r\n\r\n Table 2 Installation directory file description\r\n\r\n| **No.** | **File path**                              | **Description**                                              |\r\n| ------- | ------------------------------------------ | ------------------------------------------------------------ |\r\n| 1       | /usr/local/ivorysql/ivorysql-1             | Software Installation Directory                              |\r\n| 2       | /var/lib/ivorysql/ivorysql-1/data          | Data directory (default)                                     |\r\n| 3       | /usr/bin/ivorysql-1-setup                  | Helps system administrators with basic database cluster management |\r\n| 4       | /usr/lib/systemd/system/ivorysql-1.service | Guarding services                                            |\r\n\r\n \r\n\r\n### 1.4 RPM installation\r\n\r\n\r\n\r\nRPM installations, by the way, need to be installed in this order:\r\n\r\n```\r\nyum install -y libicu libxslt python3\t\t\t\t\t--先安装依赖\r\nrpm -ivh ivorysql1-libs-1.2-1.rhel7.x86_64.rpm\r\nrpm -ivh ivorysql1-1.2-1.rhel7.x86_64.rpm\r\nrpm -ivh ivorysql1-contrib-1.2-1.rhel7.x86_64.rpm --nodeps\r\nrpm -ivh ivorysql1-server-1.2-1.rhel7.x86_64.rpm\r\n```\r\n\r\nSo, it's quite convenient to install using YUM. If not, download it separately and install it in this order.\r\n\r\nDownload address: https://yum.highgo.ca/ivorysql.html\r\n\r\n![Y](Y-b.png)\r\n\r\nClick BROWSE Repository-1 to find the corresponding package to download (note: dependency packages are not available on the website).\r\n\r\n \r\n\r\n## Initialize the database\r\n\r\n\r\n\r\nThe IvorySQL database is easy to initialize and start or stop by default.\r\n\r\n\r\n\r\n### 2.1 Default Initialization\r\n\r\n\r\n\r\nTo initialize the system, run the following command as user root:\r\n\r\n```\r\n/usr/local/ivorysql/ivorysql-1/bin/ivorysql-1-setup initdb\r\n```\r\n\r\n**Note: IvorysQL-1 is read by default because SERVICE_NAME is not provided.**\r\n\r\n\r\n\r\nEnable and start the service:\r\n\r\n```\r\nsystemctl enable --now ivorysql-1.service\r\n```\r\n\r\n\r\n\r\nIvorysqL-1-setup\r\n\r\n```\r\nivorysql-1-setup {initdb|check_upgrade|upgrade} [SERVICE_NAME]\r\n```\r\n\r\n**Note: For details about how to use this command, run ivorysqL-1-setup --help.**\r\n\r\n \r\n\r\n### 2.2 Custom Initialization\r\n\r\n\r\n\r\nIf we have a requirement to specify the data file path (/ ivorysQL /1.2/data/) and port number (5866), then we can customize the initialization.\r\n\r\n\r\n\r\nAccording to the default service file \"/ usr/lib/systemd/system/ivorysql - 1. The service\" in the same directory replication of a new \"ivorysql - 5866. The service\" :\r\n\r\n```\r\ncp /usr/lib/systemd/system/ivorysql-1.service /usr/lib/systemd/system/ivorysql-5866.service\r\n```\r\n\r\n\r\n\r\nModify Add the following information:\r\n\r\n```\r\nEnvironment=PGDATA=/ivorysql/1.2/data/\r\nEnvironment=PGPORT=5866\r\n```\r\n\r\n\r\n\r\nSpecify SERVICE_NAME as ivorysQL-5866 to initialize:\r\n\r\n```\r\n/usr/local/ivorysql/ivorysql-1/bin/ivorysql-1-setup initdb ivorysql-5866\r\n```\r\n\r\n\r\n\r\nEnable and start the service:\r\n\r\n```\r\nsystemctl enable --now ivorysql-5866.service\r\n```\r\n\r\n\r\n\r\n### 2.3 Common Service Operations\r\n\r\n\r\n\r\nIvorSQL Database service operation commands:\r\n\r\n```\r\nsystemctl start ivorysql-1.service\t\t\t\t--启动数据库服务\r\nsystemctl stop ivorysql-1.service\t\t\t\t--停止数据库服务\r\nsystemctl restart ivorysql-1.service\t\t\t--重启数据库\r\nsystemctl status ivorysql-1.service\t\t\t--查看数据库状态\r\nsystemctl reload ivorysql-1.service\t\t\t--可以满足部分数据库配置修改完后生效\r\n```\r\n\r\n\r\n\r\n## Configure database services\r\n\r\n\r\n\r\nWe only have a simple configuration here, can be local and remote connection is ok\r\n\r\n \r\n\r\n### 3.1 Client Authentication\r\n\r\n\r\n\r\nModify the/var/lib/ivorysql/ivorysql - 1 / data/pg_hba. Conf, add the following content:\r\n\r\n```\r\nhost    all             all             0.0.0.0/0               scram-sha-256\r\n```\r\n\r\n\r\n\r\nRun the following command to load the configuration:\r\n\r\n```\r\nsystemctl reload ivorysql-1.service\r\n```\r\n\r\n\r\n\r\n### 3.2 Basic Parameters\r\n\r\n\r\n\r\nSwitch to user ivorysQL:\r\n\r\n```\r\nsu - ivorysql\r\n```\r\n\r\n\r\n\r\nConnect to database through PSQL:\r\n\r\n```\r\npsql\r\n```\r\n\r\n\r\n\r\nChange ivorysQL password for remote connection:\r\n\r\n```\r\nalter system set listen_addresses = '*';\r\nalter user ivorysql password '666666';\r\n```\r\n\r\n**Note: User ivorysQL does not have a password. If you do not change the password, you can change the client authentication mode to Trust to avoid secret login.**\r\n\r\n\r\n\r\nReturn to user root and restart the service for the Settings to take effect:\r\n\r\n```\r\nsystemctl restart ivorysql-1.service\r\n```\r\n\r\n\r\n\r\n## The firewall\r\n\r\n\r\n\r\nIf the firewall is enabled, port 5333 needs to be opened:\r\n\r\n```\r\nfirewall-cmd --zone=public --add-port=5333/tcp --permanent\r\nfirewall-cmd --reload\r\n```\r\n\r\n**Note: The default ivorysQL service port is 5333. If this port is disabled, external clients fail to connect to the IVorysQL service through an IP address.**\r\n\r\n \r\n\r\n## The client connects to the database\r\n\r\n\r\n\r\nThe IvorySQL client is the same as the PostgreSQL client.\r\n\r\n\r\n\r\n### 4.1 PSQL connection\r\n\r\n\r\n\r\nOperating system user IvorysQL session connection:\r\n\r\n```\r\n[root@Node02 ~]# su - ivorysql \r\nLast login: Wed Apr 27 23:58:57 CST 2022 on pts/0\r\n-bash-4.2$ psql\r\npsql (14.2)\r\nType \"help\" for help.\r\n\r\nivorysql=#\r\n```\r\n\r\n\r\n\r\n### 4.2 DBeaver connection\r\n\r\n\r\n\r\nDBeaver is a powerful open source tool with the following connectivity configurations:\r\n\r\n![Y](Y-c.png)\r\n\r\n\r\n\r\n### 4.3 Highgo Developer connection\r\n\r\n\r\n\r\nHighgo Developer is a tool independently developed by Highgo, which supports not only Highgo database, but also PostgreSQL and IvorySQL database. The connection configuration is as follows:\r\n\r\n![Y](Y-d.png)\r\n\r\n \r\n\r\n## Uninstall\r\n\r\n\r\n\r\nSince we installed through yum, it is recommended to use yum to uninstall. Try not to use RPM, which may cause incomplete uninstall. Of course, you can also uninstall it according to the Yum installation list.\r\n\r\n\r\n\r\n### 5.1 Backing Up Data\r\n\r\n\r\n\r\nData directory in/var/lib/ivorysql under/data/ivorysql - 1, so we can this directory will be protected, and best to stop the service, do a backup.\r\n\r\n\r\n\r\n### 5.2 YUM uninstall\r\n\r\n\r\n\r\nStop the database service first:\r\n\r\n```\r\nsystemctl stop ivorysql-1.service\r\n```\r\n\r\n\r\n\r\nUse the \"yum history list\" to determine the transaction ID of the yum installation:\r\n\r\n```\r\n[root@Node02 ~]# yum history list\r\nLoaded plugins: fastestmirror\r\nID     | Login user               | Date and time    | Action(s)      | Altered\r\n-------------------------------------------------------------------------------\r\n     5 | root <root>              | 2022-04-27 12:38 | Install        |   11  <\r\n     4 | root <root>              | 2022-03-26 16:08 | Install        |   35 > \r\n     3 | root <root>              | 2022-03-26 16:07 | I, U           |   19   \r\n     2 | root <root>              | 2022-03-26 16:07 | I, U           |   73   \r\n     1 | System <unset>           | 2022-03-26 15:59 | Install        |  299   \r\nhistory list\r\n```\r\n\r\n\r\n\r\nYou can see that ID 5 is the transaction that performs the installation. Run the following command to uninstall (replace XX with 5) :\r\n\r\n```\r\nyum history undo XX\r\n```\r\n\r\n\r\n\r\nYou can also use the following command to uninstall:\r\n\r\n```\r\nyum remove ivorysql-server\r\n```\r\n\r\n\r\n\r\nHowever, the command is not completely uninstalled, only removing two dependencies and failing to remove eight dependencies. You can decide whether to uninstall this way depending on whether to keep these dependencies.\r\n\r\n \r\n\r\n## Postscript\r\n\r\n\r\n\r\n- For more detailed operations, see postgresQL operations. For example, direct initialization with initDB.\r\n\r\n\r\n- You can also refer to the IvorySQL documentation:\r\n\r\n\r\n/usr/share/doc/ivorysqL1-1.2/readme.rpm -dist\r\n\r\n- If you have any question, welcome to the official community IvorySQL warehouse: **github.com/IvorySQL/IvorySQL**  submit issue.\r\n\r\n \r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL-sv",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-sv",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-4-18-sv2022/index.md",
        "title": "IvorySQL at PostgresConf SV 2022",
        "description": "The Postgres Conference in Silicon Valley is the largest PG conference on the West Coast and one of the most important Postgres conferences of the year in the US and globally. It will be held on April 7-8, 2022 (PDT) at the Hilton Hotel SAN Jose, California, USA. As an annual technology event for PostgreSQL technologists, practitioners, and enthusiasts around the world, the Silicon Valley Conference is dedicated to bringing together and discussing the relationship between people, Postgres, and data! The conference is as inclusive and fair as silicon Valley, bringing together the best speakers, audiences and sponsors, all working to create growth opportunities for the global Postgres ecosystem.",
        "date": "2022-04-18T00:00:00.000Z",
        "formattedDate": "April 18, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "PostgresConf SV",
            "permalink": "/en/blog/tags/postgres-conf-sv"
          },
          {
            "label": "Database",
            "permalink": "/en/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/en/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 5.45,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-sv",
          "title": "IvorySQL at PostgresConf SV 2022",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PostgresConf SV",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "Install software through the YUM source",
          "permalink": "/en/blog/IvorySQL-YUM"
        },
        "nextItem": {
          "title": "PostgresWorld Webinar | A Deep Dive Into IvorySQL",
          "permalink": "/en/blog/IvorySQL-Webinar"
        }
      },
      "content": "The Postgres Conference in Silicon Valley is the largest PG conference on the West Coast and one of the most important Postgres conferences of the year in the US and globally. It will be held on April 7-8, 2022 (PDT) at the Hilton Hotel SAN Jose, California, USA. As an annual technology event for PostgreSQL technologists, practitioners, and enthusiasts around the world, the Silicon Valley Conference is dedicated to bringing together and discussing the relationship between people, Postgres, and data! The conference is as inclusive and fair as silicon Valley, bringing together the best speakers, audiences and sponsors, all working to create growth opportunities for the global Postgres ecosystem.\r\n\r\n About 200 people attended the meeting, the largest offline meeting since the outbreak. \r\n\r\n**Bruce Momjian, a key member of the community**, attended the conference, which was organized by PostgresConf,Joshua D.Drake, Jim Mlodgenski, and others. People from the United States,China, Canada, Brazil, Spain, Germany, India, Pakistan and other countries participated.\r\n\r\n**Grant Zhou, head of Highgo North America Research Institute and Secretary general of PostgreSQL China International Advisory Committee, was invited to participate in PostgreSQL internal development discussions and community project contributions.** \r\n\r\nThe following is a two-day Postgres conference briefing in Silicon Valley brought to you by the IvorySQL open source database community.\r\n\r\n## Some of the speech\r\n\r\n**Digital Rights and Privacy: Concerns for the 21st century--by Andres Arrieta**\r\n\r\nThe Electronic Frontier Foundation has been protecting and fighting for our civil liberties for over 30 years. In those 30 years a lot has happened: Our relationship to the internet has fundamentally changed, and yet, in many ways, our understanding of how it works has remained stagnant. 30 years ago, the Internet was a mystical place of wizardry with many unknowns, and a realm which was difficult to access. Today it’s a core part of our life that we have become reliant on, and while it has become far easier than ever to access the many gifts that the Internet provides, understanding of how it works - from policy makers to enforcement agencies - continues to lag. During that time, EFF and its mission have grown to cover many of the aspects that technology has brought for better or worse and to help protect those impacted by it, while ensuring a bright future with innovation that improves our lives. So what is happening today and where are our efforts going? Why have some issues like privacy and competition become so strongly intertwined, and what new opportunities and threats lay ahead? I’ll walk you through some of our work, some of the areas of concern, and some of the things I believe will help us work towards a better future.\r\n\r\n\r\n\r\n**Past, Present, and Future of Logical Replication--by Amit Kapila**\r\nIn this talk, I will tell how the Logical Replication has been evolved over years in PostgreSQL. This will explain some of the major recent enhancements like facilitating logical replication of two-phase and large in-progress transactions. I will share my views on how this technology can be leveraged to build a highly scalable and available database solution for large Enterprises. After that, I will also talk about some of the important enhancements being discussed in this technology area for future releases of PostgreSQL. I'll also cover how this technology can be enhanced for data migration from PostgreSQL to other databases.\r\n\r\n\r\n\r\n**IvorySQL--An Open Source Oracle-compatible Database Based on PostgreSQL--by GRANT ZHOU**\r\nThere are many users who need to migrate their applications from Oracle to the open source Postgres, but in order to support the new database, users often need to re-develop the application, which is inconvenient. If there is a database based on Postgres and compatible with most Oracle syntax and functions, it will be too convenient for customers. However, the official Postgres project will not accept this kind of code submission. After all, Postgres is Postgres, and Oracle is Oracle. So, let's make an Oracle compatible database. This talk will introduce how to make a database compatible with Oracle syntax based on PG, and introduce the IvorySQL project. This project is an open source project (Apache 2.0) led by Highgo Software, and currently has released version 1.2 based on PostgreSQL 14.2. Welcome everyone to contribute on this open source Oracle compatible database - IvorySQL, powered by PostgreSQL.\r\n\r\n\r\n\r\n**Non-Relational Postgres--by Bruce Momjian**\r\nPostgres has always had strong support for relational storage. However, there are many cases where relational storage is either inefficient or overly restrictive. This talk shows the many ways that Postgres has expanded to support non-relational storage, specifically the ability to store and index multiple values, even unrelated ones, in a single database field. Such storage allows for greater efficiency and access simplicity, and can also avoid the negatives of entity-attribute-value (eav) storage. The talk will cover many examples of multiple-value-per-field storage, including arrays, range types, geometry, full text search, xml, json, and records.\r\n\r\n\r\n\r\n**Using Global database in Amazon Aurora PostgreSQL--by Shayon Sanyal and Sukhpreet Bedi**\r\nAn Amazon Aurora Global database is designed for globally distributed applications, allowing a single Amazon Aurora database to span multiple AWS Regions. It replicates your data with no impact on database performance, enables fast local reads with low latency in each Region, and provides disaster recovery (DR) from Region-wide outages. In this session, learn how to plan for cross-Region DR and easily scale Aurora reads across the world to place your applications close to your users. You also learn how to meet your recovery point objective (RPO) and recovery time objective (RTO) with Amazon Aurora global databases.\r\n\r\n\r\n\r\n**Amazon Babelfish for Aurora--by chandra pathivada**\r\nNow the Babelfish for Aurora is available. This presentation is about how Babelfish helps customers to migrate SQL Server workloads to Postgres. In this presentation, we are going to give a demo of what is Babelfish , the internals of Aurora ,Aurora for SQL Server DBAs using Babelfish, and Labs on Application Migration.\r\n\r\n\r\n\r\n**The Biography of a Modern Cloud Native Application--by Alexandra Elchinoff and Karthik Ranganathan**\r\nModern cloud native applications lead exciting lives - from their birth in the cloud and dealing with massive unplanned success to surviving cloud outages and handling customers worldwide. In this talk, Yugabyte CTO Karthik Ranganathan walks through the eventful life of a successful cloud native app, as seen from the perspective of the data layer.\r\n\r\n\r\n\r\n\r\n\r\n## Some of the pictures\r\n\r\n![po](po-one.png)\r\n\r\n![po](po-two.png)\r\n\r\n![po](po-three.png)\r\n\r\n![po](po-four.png)\r\n\r\n![po](po-five.png)\r\n\r\n\r\n\r\n\r\n\r\n## Postgres Conference in Silicon Valley 2022\r\n\r\nhttps://postgresconf.org/conferences/SV2022\r\n\r\n\r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL-Webinar",
      "metadata": {
        "permalink": "/en/blog/IvorySQL-Webinar",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-3-25-postgres-world-webinar/index.md",
        "title": "PostgresWorld Webinar | A Deep Dive Into IvorySQL",
        "description": "Hi guys, PostgresWorld Webinars is back!",
        "date": "2022-03-25T00:00:00.000Z",
        "formattedDate": "March 25, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "PostgresWorld",
            "permalink": "/en/blog/tags/postgres-world"
          },
          {
            "label": "Database",
            "permalink": "/en/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/en/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 2.24,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL-Webinar",
          "title": "PostgresWorld Webinar | A Deep Dive Into IvorySQL",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "PostgresWorld",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL at PostgresConf SV 2022",
          "permalink": "/en/blog/IvorySQL-sv"
        },
        "nextItem": {
          "title": "IvorySQL Has Arrived",
          "permalink": "/en/blog/IvorySQL"
        }
      },
      "content": "Hi guys, PostgresWorld Webinars is back!\r\n\r\nPostgreSQL plays an important role in the development of databases in China. Many database products around the world choose PostgreSQL as their technology development path. **However, the problem of migrating applications from Oracle to Open source Postgres became the biggest obstacle,** so we created the IvorySQL open source project, which is based on the latest PostgreSQL 14 database with strong Oracle compatibility.\r\nBut why do we have to do IvorySQL open source project? How is it technically different from Postgres and Oracle? This webinar invites you to join us.\r\n\r\nThis webinar is hosted by Grant Zhou on IvorySQL - An Open Source Oracle-compatible Database Based on PostgreSQL.\r\n\r\n## Guest introduction\r\n\r\n**Grant Zhou** currently lived in Canada, he is the founder of Highgo Software North America, and he is leading the company PostgreSQL development team with members from Canada, China and Pakistan. He is working as the secretary of the International Consultant Committee of the PostgreSQL China Association at the same time, and also proud to be the Organizer & Asia Liaison at PostgresConf. He worked in Alcatel-Lucent (Nokia) company for more than ten years and had rich experiences on high availability, real-time telecommunication systems, database technologies and Unix/Linux programming.\r\n\r\nIn December 2021, the team announced the first available version of IvorySQL database, **which is the only open source database with Oracle compatibility features based on PostgreSQL**. On Feburay 28, 2022, based on PostgreSQL 14.2, IvorySQL 1.2 was released.\r\n\r\n## Conference Highlights\r\n\r\nThere are many users who need to migrate their applications from Oracle to the open source Postgres, but in order to support the new database, users often need to re-develop the application, which is inconvenient. If there is a database based on Postgres and compatible with most Oracle syntax and functions, it will be too convenient for customers. However, the official Postgres project will not accept this kind of code submission. After all, Postgres is Postgres, and Oracle is Oracle.\r\nSo, let's make an Oracle compatible database.\r\nThis talk will introduce how to make a database compatible with Oracle syntax based on PG, and introduce the IvorySQL project. This project is an open source project (Apache 2.0) led by Highgo Software and currently has released version 1.2 based on PostgreSQL 14.2.\r\n**Welcome everyone to contribute to this open source Oracle compatible database - IvorySQL, powered by PostgreSQL.**\r\n\r\n## Time and Link\r\n\r\n- **Time:** Stay tuned for the IvorySQL Project Webinar on March 31, 2022 at 1:00pm PDT.\r\n- **Participating website：**https://postgresconf.org/accounts/sign_up\r\n- **Watch the link：**https://postgresconf.org/conferences/PostgresWorld-Webinars-2022/program/proposals/ivorysql-an-open-source-oracle-compatible-database-based-on-postgresql\r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL",
      "metadata": {
        "permalink": "/en/blog/IvorySQL",
        "source": "@site/i18n/en/docusaurus-plugin-content-blog/2022-1-28-ivorysql-arrived/index.md",
        "title": "IvorySQL Has Arrived",
        "description": "Hello",
        "date": "2022-01-28T00:00:00.000Z",
        "formattedDate": "January 28, 2022",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "Welcome",
            "permalink": "/en/blog/tags/welcome"
          },
          {
            "label": "Database",
            "permalink": "/en/blog/tags/database"
          },
          {
            "label": "Oracle Compatible",
            "permalink": "/en/blog/tags/oracle-compatible"
          },
          {
            "label": "PostgreSQL",
            "permalink": "/en/blog/tags/postgre-sql"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 2.515,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL",
          "title": "IvorySQL Has Arrived",
          "authors": [
            "official"
          ],
          "authorTwitter": "IvorySql",
          "tags": [
            "IvorySQL",
            "Welcome",
            "Database",
            "Oracle Compatible",
            "PostgreSQL",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "PostgresWorld Webinar | A Deep Dive Into IvorySQL",
          "permalink": "/en/blog/IvorySQL-Webinar"
        },
        "nextItem": {
          "title": "欢迎来到IvorySQL社区",
          "permalink": "/en/blog/IvorySQL"
        }
      },
      "content": "![Hello](Hello-banner.png)  \r\n\r\nJust when the world was packing the bags for the holiday season and getting ready to welcome the New year we were hard at work and were giving the final touches to the project that our team was working on since the start of 2021. And it was the 15th of December just before the day end we got all green lights and silently released the very first version of IvorySQL before cleaning up the desk for that day.\r\n\r\n## IvorySQL at Glance\r\n\r\nIvorySQL is **Apache 2.0** licensed Open Source Oracle compatible PostgreSQL. The very first release of IvorySQL is derived from PostgreSQL 14 with a firm commitment to always remain 100% compatible and a Drop-in replacement of the latest PostgreSQL.  \r\n\r\nIvorySQL adds a compatible_db GUC on top of existing standard PostgreSQL configuration parameters. The ```compatible_db``` is a toggle switch to switch between Oracle and PostgreSQL compatibility modes. The second major highlight of IvorySQL is ```PL/iSQL``` procedural language that supports oracle’s PL/SQL syntax. These two additions sit at the core of Oracle compatibility of IvorySQL without breaking the standard PostgreSQL compatibility. The ```compatible_db``` switches the behavior of functions and objects that exist in both Oracle and PostgreSQL and acts differently, while ```PL/iSQL``` builds the foundation for running the oracle code on IvorySQL with minimal changes.  \r\n\r\nIvorySQL comes with numerous Oracle compatibility features including Oracle style  **PACKAGES**, **DATA Types**, and **Conversion Functions**. For details of Oracle compatibility features in IvorySQL refer to *[IvorySQL documentation](https://www.ivorysql.org/docs/intro)*   \r\n\r\n## We are committed to following the principles of open source way\r\n\r\nIvorySQL is committed to abiding by the principles of ***[open-source ways](https://opensource.com/open-source-way)*** and we strongly believe in building a healthy and inclusive community. We maintain that good ideas can come from anywhere, and the best ideas should win. Only by including diverse perspectives, we can reach to the best decision. While the first version of IvorySQL is mainly focused on Oracle Compatibility features, going forward the future road map and feature set will be determined by the community in an open-source way.\r\n\r\n## Contributing to the IvorySQL\r\n\r\nThere are plenty of ways to contribute to IvorySQL. You can contribute by providing the documentation updates, by providing the translations for the documentation. If you have design skills you can contribute to the IvorySQL website project.  \r\nTesting the IvorySQL and reporting issues, by issuing pull requests for bug fixes or new features or answering the questions on mailing lists are some ways to contribute to the IvorySQL project and all types of contributions are welcomed and appreciated by the IvorySQL community.  \r\n\r\n## Getting Started\r\n\r\nAll IvorySQL related projects including database server, website, and documentation are hosted and managed through Github. You can download the source code or released packages and track the current issues, pull requests, and discussions through the IvorySQL [Github page](https://github.com/IvorySQL/).  \r\n\r\nVisit http://www.ivorysql.org and read the project documentation and contribution guidelines.  \r\n\r\n---\r\n\r\n>Join the IvorySQL community by subscribing to mailing lists:  \r\n>- **[Hackers List](https://lists.ivorysql.org/postorius/lists/hackers.ivorysql.org/)**  \r\n>- **[Users List](https://lists.ivorysql.org/postorius/lists/general.ivorysql.org/)**  \r\n>  \r\n>***Also, don't forget to give us a :star: on [Github](https://github.com/IvorySQL/IvorySQL)***"
    },
    {
      "id": "IvorySQL",
      "metadata": {
        "permalink": "/en/blog/IvorySQL",
        "source": "@site/blog/2021-12-10-welcome/index.md",
        "title": "欢迎来到IvorySQL社区",
        "description": "IvorySQL是唯一一个与Oracle兼容的开源PostgreSQL数据库。",
        "date": "2021-12-10T00:00:00.000Z",
        "formattedDate": "December 10, 2021",
        "tags": [
          {
            "label": "IvorySQL",
            "permalink": "/en/blog/tags/ivory-sql"
          },
          {
            "label": "Welcome",
            "permalink": "/en/blog/tags/welcome"
          },
          {
            "label": "Database",
            "permalink": "/en/blog/tags/database"
          },
          {
            "label": "Join Us",
            "permalink": "/en/blog/tags/join-us"
          }
        ],
        "readingTime": 0.215,
        "hasTruncateMarker": false,
        "authors": [
          {
            "name": "IvorySQL Team",
            "url": "https://github.com/ivorysql",
            "twitter": "IvorySql",
            "imageURL": "https://github.com/ivorysql.png",
            "key": "official"
          }
        ],
        "frontMatter": {
          "slug": "IvorySQL",
          "title": "欢迎来到IvorySQL社区",
          "authors": [
            "official"
          ],
          "tags": [
            "IvorySQL",
            "Welcome",
            "Database",
            "Join Us"
          ]
        },
        "prevItem": {
          "title": "IvorySQL Has Arrived",
          "permalink": "/en/blog/IvorySQL"
        }
      },
      "content": "IvorySQL是唯一一个与Oracle兼容的开源PostgreSQL数据库。\r\n\r\n希望成为正在成长中的IvorySQL社区的成员？加入我们的 [邮件列表](https://lists.ivorysql.org)"
    }
  ]
}